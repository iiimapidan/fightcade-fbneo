// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

#ifndef PROTOBUF_Message_2eproto__INCLUDED
#define PROTOBUF_Message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace pb {
class C2S_Connect;
class C2S_ConnectDefaultTypeInternal;
extern C2S_ConnectDefaultTypeInternal _C2S_Connect_default_instance_;
class C2S_CreateRoom;
class C2S_CreateRoomDefaultTypeInternal;
extern C2S_CreateRoomDefaultTypeInternal _C2S_CreateRoom_default_instance_;
class C2S_Input;
class C2S_InputDefaultTypeInternal;
extern C2S_InputDefaultTypeInternal _C2S_Input_default_instance_;
class C2S_InputFrame;
class C2S_InputFrameDefaultTypeInternal;
extern C2S_InputFrameDefaultTypeInternal _C2S_InputFrame_default_instance_;
class C2S_JoinRoom;
class C2S_JoinRoomDefaultTypeInternal;
extern C2S_JoinRoomDefaultTypeInternal _C2S_JoinRoom_default_instance_;
class C2S_Ready;
class C2S_ReadyDefaultTypeInternal;
extern C2S_ReadyDefaultTypeInternal _C2S_Ready_default_instance_;
class S2C_Connect;
class S2C_ConnectDefaultTypeInternal;
extern S2C_ConnectDefaultTypeInternal _S2C_Connect_default_instance_;
class S2C_CreateRoom;
class S2C_CreateRoomDefaultTypeInternal;
extern S2C_CreateRoomDefaultTypeInternal _S2C_CreateRoom_default_instance_;
class S2C_Frame;
class S2C_FrameDefaultTypeInternal;
extern S2C_FrameDefaultTypeInternal _S2C_Frame_default_instance_;
class S2C_Input;
class S2C_InputDefaultTypeInternal;
extern S2C_InputDefaultTypeInternal _S2C_Input_default_instance_;
class S2C_InputFrame;
class S2C_InputFrameDefaultTypeInternal;
extern S2C_InputFrameDefaultTypeInternal _S2C_InputFrame_default_instance_;
class S2C_JoinRoom;
class S2C_JoinRoomDefaultTypeInternal;
extern S2C_JoinRoomDefaultTypeInternal _S2C_JoinRoom_default_instance_;
class S2C_Start;
class S2C_StartDefaultTypeInternal;
extern S2C_StartDefaultTypeInternal _S2C_Start_default_instance_;
}  // namespace pb

namespace pb {

namespace protobuf_Message_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_Message_2eproto

enum ID {
  ID_Begin = 0,
  ID_Connect = 1,
  ID_CreateRoom = 2,
  ID_JoinRoom = 3,
  ID_Ready = 4,
  ID_Start = 5,
  ID_Input = 6,
  ID_Frame = 7,
  ID_PING = 8,
  ID_PONG = 9,
  ID_StartInput = 10,
  ID_EndInput = 11,
  ID_C2S_InputFrame = 12,
  ID_S2C_InputFrame = 13,
  ID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ID_IsValid(int value);
const ID ID_MIN = ID_Begin;
const ID ID_MAX = ID_S2C_InputFrame;
const int ID_ARRAYSIZE = ID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ID_descriptor();
inline const ::std::string& ID_Name(ID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ID_descriptor(), value);
}
inline bool ID_Parse(
    const ::std::string& name, ID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ID>(
    ID_descriptor(), name, value);
}
enum Code {
  ERR_Ok = 0,
  Code_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Code_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Code_IsValid(int value);
const Code Code_MIN = ERR_Ok;
const Code Code_MAX = ERR_Ok;
const int Code_ARRAYSIZE = Code_MAX + 1;

const ::google::protobuf::EnumDescriptor* Code_descriptor();
inline const ::std::string& Code_Name(Code value) {
  return ::google::protobuf::internal::NameOfEnum(
    Code_descriptor(), value);
}
inline bool Code_Parse(
    const ::std::string& name, Code* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Code>(
    Code_descriptor(), name, value);
}
// ===================================================================

class C2S_Connect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.C2S_Connect) */ {
 public:
  C2S_Connect();
  virtual ~C2S_Connect();

  C2S_Connect(const C2S_Connect& from);

  inline C2S_Connect& operator=(const C2S_Connect& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Connect& default_instance();

  static inline const C2S_Connect* internal_default_instance() {
    return reinterpret_cast<const C2S_Connect*>(
               &_C2S_Connect_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(C2S_Connect* other);

  // implements Message ----------------------------------------------

  inline C2S_Connect* New() const PROTOBUF_FINAL { return New(NULL); }

  C2S_Connect* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C2S_Connect& from);
  void MergeFrom(const C2S_Connect& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C2S_Connect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.C2S_Connect)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_Message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2C_Connect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.S2C_Connect) */ {
 public:
  S2C_Connect();
  virtual ~S2C_Connect();

  S2C_Connect(const S2C_Connect& from);

  inline S2C_Connect& operator=(const S2C_Connect& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Connect& default_instance();

  static inline const S2C_Connect* internal_default_instance() {
    return reinterpret_cast<const S2C_Connect*>(
               &_S2C_Connect_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(S2C_Connect* other);

  // implements Message ----------------------------------------------

  inline S2C_Connect* New() const PROTOBUF_FINAL { return New(NULL); }

  S2C_Connect* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2C_Connect& from);
  void MergeFrom(const S2C_Connect& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2C_Connect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .pb.Code code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::pb::Code code() const;
  void set_code(::pb::Code value);

  // @@protoc_insertion_point(class_scope:pb.S2C_Connect)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int code_;
  mutable int _cached_size_;
  friend struct protobuf_Message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class C2S_CreateRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.C2S_CreateRoom) */ {
 public:
  C2S_CreateRoom();
  virtual ~C2S_CreateRoom();

  C2S_CreateRoom(const C2S_CreateRoom& from);

  inline C2S_CreateRoom& operator=(const C2S_CreateRoom& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_CreateRoom& default_instance();

  static inline const C2S_CreateRoom* internal_default_instance() {
    return reinterpret_cast<const C2S_CreateRoom*>(
               &_C2S_CreateRoom_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(C2S_CreateRoom* other);

  // implements Message ----------------------------------------------

  inline C2S_CreateRoom* New() const PROTOBUF_FINAL { return New(NULL); }

  C2S_CreateRoom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C2S_CreateRoom& from);
  void MergeFrom(const C2S_CreateRoom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C2S_CreateRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string roomName = 1;
  void clear_roomname();
  static const int kRoomNameFieldNumber = 1;
  const ::std::string& roomname() const;
  void set_roomname(const ::std::string& value);
  #if LANG_CXX11
  void set_roomname(::std::string&& value);
  #endif
  void set_roomname(const char* value);
  void set_roomname(const char* value, size_t size);
  ::std::string* mutable_roomname();
  ::std::string* release_roomname();
  void set_allocated_roomname(::std::string* roomname);

  // @@protoc_insertion_point(class_scope:pb.C2S_CreateRoom)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr roomname_;
  mutable int _cached_size_;
  friend struct protobuf_Message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2C_CreateRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.S2C_CreateRoom) */ {
 public:
  S2C_CreateRoom();
  virtual ~S2C_CreateRoom();

  S2C_CreateRoom(const S2C_CreateRoom& from);

  inline S2C_CreateRoom& operator=(const S2C_CreateRoom& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_CreateRoom& default_instance();

  static inline const S2C_CreateRoom* internal_default_instance() {
    return reinterpret_cast<const S2C_CreateRoom*>(
               &_S2C_CreateRoom_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(S2C_CreateRoom* other);

  // implements Message ----------------------------------------------

  inline S2C_CreateRoom* New() const PROTOBUF_FINAL { return New(NULL); }

  S2C_CreateRoom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2C_CreateRoom& from);
  void MergeFrom(const S2C_CreateRoom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2C_CreateRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .pb.Code code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::pb::Code code() const;
  void set_code(::pb::Code value);

  // uint32 roomId = 2;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::uint32 roomid() const;
  void set_roomid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.S2C_CreateRoom)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int code_;
  ::google::protobuf::uint32 roomid_;
  mutable int _cached_size_;
  friend struct protobuf_Message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class C2S_JoinRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.C2S_JoinRoom) */ {
 public:
  C2S_JoinRoom();
  virtual ~C2S_JoinRoom();

  C2S_JoinRoom(const C2S_JoinRoom& from);

  inline C2S_JoinRoom& operator=(const C2S_JoinRoom& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_JoinRoom& default_instance();

  static inline const C2S_JoinRoom* internal_default_instance() {
    return reinterpret_cast<const C2S_JoinRoom*>(
               &_C2S_JoinRoom_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(C2S_JoinRoom* other);

  // implements Message ----------------------------------------------

  inline C2S_JoinRoom* New() const PROTOBUF_FINAL { return New(NULL); }

  C2S_JoinRoom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C2S_JoinRoom& from);
  void MergeFrom(const C2S_JoinRoom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C2S_JoinRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 roomId = 1;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 roomid() const;
  void set_roomid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2S_JoinRoom)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 roomid_;
  mutable int _cached_size_;
  friend struct protobuf_Message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2C_JoinRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.S2C_JoinRoom) */ {
 public:
  S2C_JoinRoom();
  virtual ~S2C_JoinRoom();

  S2C_JoinRoom(const S2C_JoinRoom& from);

  inline S2C_JoinRoom& operator=(const S2C_JoinRoom& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_JoinRoom& default_instance();

  static inline const S2C_JoinRoom* internal_default_instance() {
    return reinterpret_cast<const S2C_JoinRoom*>(
               &_S2C_JoinRoom_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(S2C_JoinRoom* other);

  // implements Message ----------------------------------------------

  inline S2C_JoinRoom* New() const PROTOBUF_FINAL { return New(NULL); }

  S2C_JoinRoom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2C_JoinRoom& from);
  void MergeFrom(const S2C_JoinRoom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2C_JoinRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .pb.Code code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::pb::Code code() const;
  void set_code(::pb::Code value);

  // uint32 playerId = 2;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.S2C_JoinRoom)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int code_;
  ::google::protobuf::uint32 playerid_;
  mutable int _cached_size_;
  friend struct protobuf_Message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class C2S_Ready : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.C2S_Ready) */ {
 public:
  C2S_Ready();
  virtual ~C2S_Ready();

  C2S_Ready(const C2S_Ready& from);

  inline C2S_Ready& operator=(const C2S_Ready& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Ready& default_instance();

  static inline const C2S_Ready* internal_default_instance() {
    return reinterpret_cast<const C2S_Ready*>(
               &_C2S_Ready_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(C2S_Ready* other);

  // implements Message ----------------------------------------------

  inline C2S_Ready* New() const PROTOBUF_FINAL { return New(NULL); }

  C2S_Ready* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C2S_Ready& from);
  void MergeFrom(const C2S_Ready& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C2S_Ready* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 roomId = 1;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 roomid() const;
  void set_roomid(::google::protobuf::uint32 value);

  // uint32 playerId = 2;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2S_Ready)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 roomid_;
  ::google::protobuf::uint32 playerid_;
  mutable int _cached_size_;
  friend struct protobuf_Message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2C_Start : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.S2C_Start) */ {
 public:
  S2C_Start();
  virtual ~S2C_Start();

  S2C_Start(const S2C_Start& from);

  inline S2C_Start& operator=(const S2C_Start& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Start& default_instance();

  static inline const S2C_Start* internal_default_instance() {
    return reinterpret_cast<const S2C_Start*>(
               &_S2C_Start_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(S2C_Start* other);

  // implements Message ----------------------------------------------

  inline S2C_Start* New() const PROTOBUF_FINAL { return New(NULL); }

  S2C_Start* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2C_Start& from);
  void MergeFrom(const S2C_Start& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2C_Start* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .pb.Code code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::pb::Code code() const;
  void set_code(::pb::Code value);

  // @@protoc_insertion_point(class_scope:pb.S2C_Start)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int code_;
  mutable int _cached_size_;
  friend struct protobuf_Message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class C2S_Input : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.C2S_Input) */ {
 public:
  C2S_Input();
  virtual ~C2S_Input();

  C2S_Input(const C2S_Input& from);

  inline C2S_Input& operator=(const C2S_Input& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Input& default_instance();

  static inline const C2S_Input* internal_default_instance() {
    return reinterpret_cast<const C2S_Input*>(
               &_C2S_Input_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(C2S_Input* other);

  // implements Message ----------------------------------------------

  inline C2S_Input* New() const PROTOBUF_FINAL { return New(NULL); }

  C2S_Input* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C2S_Input& from);
  void MergeFrom(const C2S_Input& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C2S_Input* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes input = 4;
  void clear_input();
  static const int kInputFieldNumber = 4;
  const ::std::string& input() const;
  void set_input(const ::std::string& value);
  #if LANG_CXX11
  void set_input(::std::string&& value);
  #endif
  void set_input(const char* value);
  void set_input(const void* value, size_t size);
  ::std::string* mutable_input();
  ::std::string* release_input();
  void set_allocated_input(::std::string* input);

  // string name = 5;
  void clear_name();
  static const int kNameFieldNumber = 5;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int32 frameIndex = 1;
  void clear_frameindex();
  static const int kFrameIndexFieldNumber = 1;
  ::google::protobuf::int32 frameindex() const;
  void set_frameindex(::google::protobuf::int32 value);

  // uint32 roomId = 2;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::uint32 roomid() const;
  void set_roomid(::google::protobuf::uint32 value);

  // uint64 timestamp = 6;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 6;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // uint32 playerId = 3;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 3;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // bool isReleaseFlag = 7;
  void clear_isreleaseflag();
  static const int kIsReleaseFlagFieldNumber = 7;
  bool isreleaseflag() const;
  void set_isreleaseflag(bool value);

  // bool isEmptyFrame = 8;
  void clear_isemptyframe();
  static const int kIsEmptyFrameFieldNumber = 8;
  bool isemptyframe() const;
  void set_isemptyframe(bool value);

  // bool isDiscard = 9;
  void clear_isdiscard();
  static const int kIsDiscardFieldNumber = 9;
  bool isdiscard() const;
  void set_isdiscard(bool value);

  // bool isCalculated = 10;
  void clear_iscalculated();
  static const int kIsCalculatedFieldNumber = 10;
  bool iscalculated() const;
  void set_iscalculated(bool value);

  // @@protoc_insertion_point(class_scope:pb.C2S_Input)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr input_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 frameindex_;
  ::google::protobuf::uint32 roomid_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::uint32 playerid_;
  bool isreleaseflag_;
  bool isemptyframe_;
  bool isdiscard_;
  bool iscalculated_;
  mutable int _cached_size_;
  friend struct protobuf_Message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2C_Frame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.S2C_Frame) */ {
 public:
  S2C_Frame();
  virtual ~S2C_Frame();

  S2C_Frame(const S2C_Frame& from);

  inline S2C_Frame& operator=(const S2C_Frame& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Frame& default_instance();

  static inline const S2C_Frame* internal_default_instance() {
    return reinterpret_cast<const S2C_Frame*>(
               &_S2C_Frame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(S2C_Frame* other);

  // implements Message ----------------------------------------------

  inline S2C_Frame* New() const PROTOBUF_FINAL { return New(NULL); }

  S2C_Frame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2C_Frame& from);
  void MergeFrom(const S2C_Frame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2C_Frame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.C2S_Input frames = 3;
  int frames_size() const;
  void clear_frames();
  static const int kFramesFieldNumber = 3;
  const ::pb::C2S_Input& frames(int index) const;
  ::pb::C2S_Input* mutable_frames(int index);
  ::pb::C2S_Input* add_frames();
  ::google::protobuf::RepeatedPtrField< ::pb::C2S_Input >*
      mutable_frames();
  const ::google::protobuf::RepeatedPtrField< ::pb::C2S_Input >&
      frames() const;

  // int32 frameIndex = 1;
  void clear_frameindex();
  static const int kFrameIndexFieldNumber = 1;
  ::google::protobuf::int32 frameindex() const;
  void set_frameindex(::google::protobuf::int32 value);

  // int32 frameCounts = 2;
  void clear_framecounts();
  static const int kFrameCountsFieldNumber = 2;
  ::google::protobuf::int32 framecounts() const;
  void set_framecounts(::google::protobuf::int32 value);

  // bool isEmptyFrame = 4;
  void clear_isemptyframe();
  static const int kIsEmptyFrameFieldNumber = 4;
  bool isemptyframe() const;
  void set_isemptyframe(bool value);

  // @@protoc_insertion_point(class_scope:pb.S2C_Frame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::pb::C2S_Input > frames_;
  ::google::protobuf::int32 frameindex_;
  ::google::protobuf::int32 framecounts_;
  bool isemptyframe_;
  mutable int _cached_size_;
  friend struct protobuf_Message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2C_Input : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.S2C_Input) */ {
 public:
  S2C_Input();
  virtual ~S2C_Input();

  S2C_Input(const S2C_Input& from);

  inline S2C_Input& operator=(const S2C_Input& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Input& default_instance();

  static inline const S2C_Input* internal_default_instance() {
    return reinterpret_cast<const S2C_Input*>(
               &_S2C_Input_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(S2C_Input* other);

  // implements Message ----------------------------------------------

  inline S2C_Input* New() const PROTOBUF_FINAL { return New(NULL); }

  S2C_Input* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2C_Input& from);
  void MergeFrom(const S2C_Input& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2C_Input* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes input = 3;
  void clear_input();
  static const int kInputFieldNumber = 3;
  const ::std::string& input() const;
  void set_input(const ::std::string& value);
  #if LANG_CXX11
  void set_input(::std::string&& value);
  #endif
  void set_input(const char* value);
  void set_input(const void* value, size_t size);
  ::std::string* mutable_input();
  ::std::string* release_input();
  void set_allocated_input(::std::string* input);

  // int32 frameIndex = 1;
  void clear_frameindex();
  static const int kFrameIndexFieldNumber = 1;
  ::google::protobuf::int32 frameindex() const;
  void set_frameindex(::google::protobuf::int32 value);

  // uint32 roomId = 2;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::uint32 roomid() const;
  void set_roomid(::google::protobuf::uint32 value);

  // uint32 playerId = 4;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 4;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.S2C_Input)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr input_;
  ::google::protobuf::int32 frameindex_;
  ::google::protobuf::uint32 roomid_;
  ::google::protobuf::uint32 playerid_;
  mutable int _cached_size_;
  friend struct protobuf_Message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class C2S_InputFrame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.C2S_InputFrame) */ {
 public:
  C2S_InputFrame();
  virtual ~C2S_InputFrame();

  C2S_InputFrame(const C2S_InputFrame& from);

  inline C2S_InputFrame& operator=(const C2S_InputFrame& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_InputFrame& default_instance();

  static inline const C2S_InputFrame* internal_default_instance() {
    return reinterpret_cast<const C2S_InputFrame*>(
               &_C2S_InputFrame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(C2S_InputFrame* other);

  // implements Message ----------------------------------------------

  inline C2S_InputFrame* New() const PROTOBUF_FINAL { return New(NULL); }

  C2S_InputFrame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C2S_InputFrame& from);
  void MergeFrom(const C2S_InputFrame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C2S_InputFrame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.C2S_Input input_data = 3;
  int input_data_size() const;
  void clear_input_data();
  static const int kInputDataFieldNumber = 3;
  const ::pb::C2S_Input& input_data(int index) const;
  ::pb::C2S_Input* mutable_input_data(int index);
  ::pb::C2S_Input* add_input_data();
  ::google::protobuf::RepeatedPtrField< ::pb::C2S_Input >*
      mutable_input_data();
  const ::google::protobuf::RepeatedPtrField< ::pb::C2S_Input >&
      input_data() const;

  // uint32 roomId = 1;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 roomid() const;
  void set_roomid(::google::protobuf::uint32 value);

  // uint32 playerId = 2;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2S_InputFrame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::pb::C2S_Input > input_data_;
  ::google::protobuf::uint32 roomid_;
  ::google::protobuf::uint32 playerid_;
  mutable int _cached_size_;
  friend struct protobuf_Message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2C_InputFrame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.S2C_InputFrame) */ {
 public:
  S2C_InputFrame();
  virtual ~S2C_InputFrame();

  S2C_InputFrame(const S2C_InputFrame& from);

  inline S2C_InputFrame& operator=(const S2C_InputFrame& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_InputFrame& default_instance();

  static inline const S2C_InputFrame* internal_default_instance() {
    return reinterpret_cast<const S2C_InputFrame*>(
               &_S2C_InputFrame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(S2C_InputFrame* other);

  // implements Message ----------------------------------------------

  inline S2C_InputFrame* New() const PROTOBUF_FINAL { return New(NULL); }

  S2C_InputFrame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2C_InputFrame& from);
  void MergeFrom(const S2C_InputFrame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2C_InputFrame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.C2S_InputFrame players_input_frame = 2;
  int players_input_frame_size() const;
  void clear_players_input_frame();
  static const int kPlayersInputFrameFieldNumber = 2;
  const ::pb::C2S_InputFrame& players_input_frame(int index) const;
  ::pb::C2S_InputFrame* mutable_players_input_frame(int index);
  ::pb::C2S_InputFrame* add_players_input_frame();
  ::google::protobuf::RepeatedPtrField< ::pb::C2S_InputFrame >*
      mutable_players_input_frame();
  const ::google::protobuf::RepeatedPtrField< ::pb::C2S_InputFrame >&
      players_input_frame() const;

  // int32 frameIndex = 1;
  void clear_frameindex();
  static const int kFrameIndexFieldNumber = 1;
  ::google::protobuf::int32 frameindex() const;
  void set_frameindex(::google::protobuf::int32 value);

  // bool isEmptyFrame = 3;
  void clear_isemptyframe();
  static const int kIsEmptyFrameFieldNumber = 3;
  bool isemptyframe() const;
  void set_isemptyframe(bool value);

  // @@protoc_insertion_point(class_scope:pb.S2C_InputFrame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::pb::C2S_InputFrame > players_input_frame_;
  ::google::protobuf::int32 frameindex_;
  bool isemptyframe_;
  mutable int _cached_size_;
  friend struct protobuf_Message_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_Connect

// -------------------------------------------------------------------

// S2C_Connect

// .pb.Code code = 1;
inline void S2C_Connect::clear_code() {
  code_ = 0;
}
inline ::pb::Code S2C_Connect::code() const {
  // @@protoc_insertion_point(field_get:pb.S2C_Connect.code)
  return static_cast< ::pb::Code >(code_);
}
inline void S2C_Connect::set_code(::pb::Code value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_Connect.code)
}

// -------------------------------------------------------------------

// C2S_CreateRoom

// string roomName = 1;
inline void C2S_CreateRoom::clear_roomname() {
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& C2S_CreateRoom::roomname() const {
  // @@protoc_insertion_point(field_get:pb.C2S_CreateRoom.roomName)
  return roomname_.GetNoArena();
}
inline void C2S_CreateRoom::set_roomname(const ::std::string& value) {
  
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2S_CreateRoom.roomName)
}
#if LANG_CXX11
inline void C2S_CreateRoom::set_roomname(::std::string&& value) {
  
  roomname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.C2S_CreateRoom.roomName)
}
#endif
inline void C2S_CreateRoom::set_roomname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2S_CreateRoom.roomName)
}
inline void C2S_CreateRoom::set_roomname(const char* value, size_t size) {
  
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2S_CreateRoom.roomName)
}
inline ::std::string* C2S_CreateRoom::mutable_roomname() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2S_CreateRoom.roomName)
  return roomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C2S_CreateRoom::release_roomname() {
  // @@protoc_insertion_point(field_release:pb.C2S_CreateRoom.roomName)
  
  return roomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C2S_CreateRoom::set_allocated_roomname(::std::string* roomname) {
  if (roomname != NULL) {
    
  } else {
    
  }
  roomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomname);
  // @@protoc_insertion_point(field_set_allocated:pb.C2S_CreateRoom.roomName)
}

// -------------------------------------------------------------------

// S2C_CreateRoom

// .pb.Code code = 1;
inline void S2C_CreateRoom::clear_code() {
  code_ = 0;
}
inline ::pb::Code S2C_CreateRoom::code() const {
  // @@protoc_insertion_point(field_get:pb.S2C_CreateRoom.code)
  return static_cast< ::pb::Code >(code_);
}
inline void S2C_CreateRoom::set_code(::pb::Code value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_CreateRoom.code)
}

// uint32 roomId = 2;
inline void S2C_CreateRoom::clear_roomid() {
  roomid_ = 0u;
}
inline ::google::protobuf::uint32 S2C_CreateRoom::roomid() const {
  // @@protoc_insertion_point(field_get:pb.S2C_CreateRoom.roomId)
  return roomid_;
}
inline void S2C_CreateRoom::set_roomid(::google::protobuf::uint32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_CreateRoom.roomId)
}

// -------------------------------------------------------------------

// C2S_JoinRoom

// uint32 roomId = 1;
inline void C2S_JoinRoom::clear_roomid() {
  roomid_ = 0u;
}
inline ::google::protobuf::uint32 C2S_JoinRoom::roomid() const {
  // @@protoc_insertion_point(field_get:pb.C2S_JoinRoom.roomId)
  return roomid_;
}
inline void C2S_JoinRoom::set_roomid(::google::protobuf::uint32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_JoinRoom.roomId)
}

// -------------------------------------------------------------------

// S2C_JoinRoom

// .pb.Code code = 1;
inline void S2C_JoinRoom::clear_code() {
  code_ = 0;
}
inline ::pb::Code S2C_JoinRoom::code() const {
  // @@protoc_insertion_point(field_get:pb.S2C_JoinRoom.code)
  return static_cast< ::pb::Code >(code_);
}
inline void S2C_JoinRoom::set_code(::pb::Code value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_JoinRoom.code)
}

// uint32 playerId = 2;
inline void S2C_JoinRoom::clear_playerid() {
  playerid_ = 0u;
}
inline ::google::protobuf::uint32 S2C_JoinRoom::playerid() const {
  // @@protoc_insertion_point(field_get:pb.S2C_JoinRoom.playerId)
  return playerid_;
}
inline void S2C_JoinRoom::set_playerid(::google::protobuf::uint32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_JoinRoom.playerId)
}

// -------------------------------------------------------------------

// C2S_Ready

// uint32 roomId = 1;
inline void C2S_Ready::clear_roomid() {
  roomid_ = 0u;
}
inline ::google::protobuf::uint32 C2S_Ready::roomid() const {
  // @@protoc_insertion_point(field_get:pb.C2S_Ready.roomId)
  return roomid_;
}
inline void C2S_Ready::set_roomid(::google::protobuf::uint32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_Ready.roomId)
}

// uint32 playerId = 2;
inline void C2S_Ready::clear_playerid() {
  playerid_ = 0u;
}
inline ::google::protobuf::uint32 C2S_Ready::playerid() const {
  // @@protoc_insertion_point(field_get:pb.C2S_Ready.playerId)
  return playerid_;
}
inline void C2S_Ready::set_playerid(::google::protobuf::uint32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_Ready.playerId)
}

// -------------------------------------------------------------------

// S2C_Start

// .pb.Code code = 1;
inline void S2C_Start::clear_code() {
  code_ = 0;
}
inline ::pb::Code S2C_Start::code() const {
  // @@protoc_insertion_point(field_get:pb.S2C_Start.code)
  return static_cast< ::pb::Code >(code_);
}
inline void S2C_Start::set_code(::pb::Code value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_Start.code)
}

// -------------------------------------------------------------------

// C2S_Input

// int32 frameIndex = 1;
inline void C2S_Input::clear_frameindex() {
  frameindex_ = 0;
}
inline ::google::protobuf::int32 C2S_Input::frameindex() const {
  // @@protoc_insertion_point(field_get:pb.C2S_Input.frameIndex)
  return frameindex_;
}
inline void C2S_Input::set_frameindex(::google::protobuf::int32 value) {
  
  frameindex_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_Input.frameIndex)
}

// uint32 roomId = 2;
inline void C2S_Input::clear_roomid() {
  roomid_ = 0u;
}
inline ::google::protobuf::uint32 C2S_Input::roomid() const {
  // @@protoc_insertion_point(field_get:pb.C2S_Input.roomId)
  return roomid_;
}
inline void C2S_Input::set_roomid(::google::protobuf::uint32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_Input.roomId)
}

// uint32 playerId = 3;
inline void C2S_Input::clear_playerid() {
  playerid_ = 0u;
}
inline ::google::protobuf::uint32 C2S_Input::playerid() const {
  // @@protoc_insertion_point(field_get:pb.C2S_Input.playerId)
  return playerid_;
}
inline void C2S_Input::set_playerid(::google::protobuf::uint32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_Input.playerId)
}

// bytes input = 4;
inline void C2S_Input::clear_input() {
  input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& C2S_Input::input() const {
  // @@protoc_insertion_point(field_get:pb.C2S_Input.input)
  return input_.GetNoArena();
}
inline void C2S_Input::set_input(const ::std::string& value) {
  
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2S_Input.input)
}
#if LANG_CXX11
inline void C2S_Input::set_input(::std::string&& value) {
  
  input_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.C2S_Input.input)
}
#endif
inline void C2S_Input::set_input(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2S_Input.input)
}
inline void C2S_Input::set_input(const void* value, size_t size) {
  
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2S_Input.input)
}
inline ::std::string* C2S_Input::mutable_input() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2S_Input.input)
  return input_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C2S_Input::release_input() {
  // @@protoc_insertion_point(field_release:pb.C2S_Input.input)
  
  return input_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C2S_Input::set_allocated_input(::std::string* input) {
  if (input != NULL) {
    
  } else {
    
  }
  input_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input);
  // @@protoc_insertion_point(field_set_allocated:pb.C2S_Input.input)
}

// string name = 5;
inline void C2S_Input::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& C2S_Input::name() const {
  // @@protoc_insertion_point(field_get:pb.C2S_Input.name)
  return name_.GetNoArena();
}
inline void C2S_Input::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2S_Input.name)
}
#if LANG_CXX11
inline void C2S_Input::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.C2S_Input.name)
}
#endif
inline void C2S_Input::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2S_Input.name)
}
inline void C2S_Input::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2S_Input.name)
}
inline ::std::string* C2S_Input::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2S_Input.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C2S_Input::release_name() {
  // @@protoc_insertion_point(field_release:pb.C2S_Input.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C2S_Input::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.C2S_Input.name)
}

// uint64 timestamp = 6;
inline void C2S_Input::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 C2S_Input::timestamp() const {
  // @@protoc_insertion_point(field_get:pb.C2S_Input.timestamp)
  return timestamp_;
}
inline void C2S_Input::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_Input.timestamp)
}

// bool isReleaseFlag = 7;
inline void C2S_Input::clear_isreleaseflag() {
  isreleaseflag_ = false;
}
inline bool C2S_Input::isreleaseflag() const {
  // @@protoc_insertion_point(field_get:pb.C2S_Input.isReleaseFlag)
  return isreleaseflag_;
}
inline void C2S_Input::set_isreleaseflag(bool value) {
  
  isreleaseflag_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_Input.isReleaseFlag)
}

// bool isEmptyFrame = 8;
inline void C2S_Input::clear_isemptyframe() {
  isemptyframe_ = false;
}
inline bool C2S_Input::isemptyframe() const {
  // @@protoc_insertion_point(field_get:pb.C2S_Input.isEmptyFrame)
  return isemptyframe_;
}
inline void C2S_Input::set_isemptyframe(bool value) {
  
  isemptyframe_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_Input.isEmptyFrame)
}

// bool isDiscard = 9;
inline void C2S_Input::clear_isdiscard() {
  isdiscard_ = false;
}
inline bool C2S_Input::isdiscard() const {
  // @@protoc_insertion_point(field_get:pb.C2S_Input.isDiscard)
  return isdiscard_;
}
inline void C2S_Input::set_isdiscard(bool value) {
  
  isdiscard_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_Input.isDiscard)
}

// bool isCalculated = 10;
inline void C2S_Input::clear_iscalculated() {
  iscalculated_ = false;
}
inline bool C2S_Input::iscalculated() const {
  // @@protoc_insertion_point(field_get:pb.C2S_Input.isCalculated)
  return iscalculated_;
}
inline void C2S_Input::set_iscalculated(bool value) {
  
  iscalculated_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_Input.isCalculated)
}

// -------------------------------------------------------------------

// S2C_Frame

// int32 frameIndex = 1;
inline void S2C_Frame::clear_frameindex() {
  frameindex_ = 0;
}
inline ::google::protobuf::int32 S2C_Frame::frameindex() const {
  // @@protoc_insertion_point(field_get:pb.S2C_Frame.frameIndex)
  return frameindex_;
}
inline void S2C_Frame::set_frameindex(::google::protobuf::int32 value) {
  
  frameindex_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_Frame.frameIndex)
}

// int32 frameCounts = 2;
inline void S2C_Frame::clear_framecounts() {
  framecounts_ = 0;
}
inline ::google::protobuf::int32 S2C_Frame::framecounts() const {
  // @@protoc_insertion_point(field_get:pb.S2C_Frame.frameCounts)
  return framecounts_;
}
inline void S2C_Frame::set_framecounts(::google::protobuf::int32 value) {
  
  framecounts_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_Frame.frameCounts)
}

// repeated .pb.C2S_Input frames = 3;
inline int S2C_Frame::frames_size() const {
  return frames_.size();
}
inline void S2C_Frame::clear_frames() {
  frames_.Clear();
}
inline const ::pb::C2S_Input& S2C_Frame::frames(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2C_Frame.frames)
  return frames_.Get(index);
}
inline ::pb::C2S_Input* S2C_Frame::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2C_Frame.frames)
  return frames_.Mutable(index);
}
inline ::pb::C2S_Input* S2C_Frame::add_frames() {
  // @@protoc_insertion_point(field_add:pb.S2C_Frame.frames)
  return frames_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::C2S_Input >*
S2C_Frame::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2C_Frame.frames)
  return &frames_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::C2S_Input >&
S2C_Frame::frames() const {
  // @@protoc_insertion_point(field_list:pb.S2C_Frame.frames)
  return frames_;
}

// bool isEmptyFrame = 4;
inline void S2C_Frame::clear_isemptyframe() {
  isemptyframe_ = false;
}
inline bool S2C_Frame::isemptyframe() const {
  // @@protoc_insertion_point(field_get:pb.S2C_Frame.isEmptyFrame)
  return isemptyframe_;
}
inline void S2C_Frame::set_isemptyframe(bool value) {
  
  isemptyframe_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_Frame.isEmptyFrame)
}

// -------------------------------------------------------------------

// S2C_Input

// int32 frameIndex = 1;
inline void S2C_Input::clear_frameindex() {
  frameindex_ = 0;
}
inline ::google::protobuf::int32 S2C_Input::frameindex() const {
  // @@protoc_insertion_point(field_get:pb.S2C_Input.frameIndex)
  return frameindex_;
}
inline void S2C_Input::set_frameindex(::google::protobuf::int32 value) {
  
  frameindex_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_Input.frameIndex)
}

// uint32 roomId = 2;
inline void S2C_Input::clear_roomid() {
  roomid_ = 0u;
}
inline ::google::protobuf::uint32 S2C_Input::roomid() const {
  // @@protoc_insertion_point(field_get:pb.S2C_Input.roomId)
  return roomid_;
}
inline void S2C_Input::set_roomid(::google::protobuf::uint32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_Input.roomId)
}

// bytes input = 3;
inline void S2C_Input::clear_input() {
  input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2C_Input::input() const {
  // @@protoc_insertion_point(field_get:pb.S2C_Input.input)
  return input_.GetNoArena();
}
inline void S2C_Input::set_input(const ::std::string& value) {
  
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2C_Input.input)
}
#if LANG_CXX11
inline void S2C_Input::set_input(::std::string&& value) {
  
  input_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.S2C_Input.input)
}
#endif
inline void S2C_Input::set_input(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2C_Input.input)
}
inline void S2C_Input::set_input(const void* value, size_t size) {
  
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2C_Input.input)
}
inline ::std::string* S2C_Input::mutable_input() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2C_Input.input)
  return input_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2C_Input::release_input() {
  // @@protoc_insertion_point(field_release:pb.S2C_Input.input)
  
  return input_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2C_Input::set_allocated_input(::std::string* input) {
  if (input != NULL) {
    
  } else {
    
  }
  input_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input);
  // @@protoc_insertion_point(field_set_allocated:pb.S2C_Input.input)
}

// uint32 playerId = 4;
inline void S2C_Input::clear_playerid() {
  playerid_ = 0u;
}
inline ::google::protobuf::uint32 S2C_Input::playerid() const {
  // @@protoc_insertion_point(field_get:pb.S2C_Input.playerId)
  return playerid_;
}
inline void S2C_Input::set_playerid(::google::protobuf::uint32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_Input.playerId)
}

// -------------------------------------------------------------------

// C2S_InputFrame

// uint32 roomId = 1;
inline void C2S_InputFrame::clear_roomid() {
  roomid_ = 0u;
}
inline ::google::protobuf::uint32 C2S_InputFrame::roomid() const {
  // @@protoc_insertion_point(field_get:pb.C2S_InputFrame.roomId)
  return roomid_;
}
inline void C2S_InputFrame::set_roomid(::google::protobuf::uint32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_InputFrame.roomId)
}

// uint32 playerId = 2;
inline void C2S_InputFrame::clear_playerid() {
  playerid_ = 0u;
}
inline ::google::protobuf::uint32 C2S_InputFrame::playerid() const {
  // @@protoc_insertion_point(field_get:pb.C2S_InputFrame.playerId)
  return playerid_;
}
inline void C2S_InputFrame::set_playerid(::google::protobuf::uint32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_InputFrame.playerId)
}

// repeated .pb.C2S_Input input_data = 3;
inline int C2S_InputFrame::input_data_size() const {
  return input_data_.size();
}
inline void C2S_InputFrame::clear_input_data() {
  input_data_.Clear();
}
inline const ::pb::C2S_Input& C2S_InputFrame::input_data(int index) const {
  // @@protoc_insertion_point(field_get:pb.C2S_InputFrame.input_data)
  return input_data_.Get(index);
}
inline ::pb::C2S_Input* C2S_InputFrame::mutable_input_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.C2S_InputFrame.input_data)
  return input_data_.Mutable(index);
}
inline ::pb::C2S_Input* C2S_InputFrame::add_input_data() {
  // @@protoc_insertion_point(field_add:pb.C2S_InputFrame.input_data)
  return input_data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::C2S_Input >*
C2S_InputFrame::mutable_input_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.C2S_InputFrame.input_data)
  return &input_data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::C2S_Input >&
C2S_InputFrame::input_data() const {
  // @@protoc_insertion_point(field_list:pb.C2S_InputFrame.input_data)
  return input_data_;
}

// -------------------------------------------------------------------

// S2C_InputFrame

// int32 frameIndex = 1;
inline void S2C_InputFrame::clear_frameindex() {
  frameindex_ = 0;
}
inline ::google::protobuf::int32 S2C_InputFrame::frameindex() const {
  // @@protoc_insertion_point(field_get:pb.S2C_InputFrame.frameIndex)
  return frameindex_;
}
inline void S2C_InputFrame::set_frameindex(::google::protobuf::int32 value) {
  
  frameindex_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_InputFrame.frameIndex)
}

// repeated .pb.C2S_InputFrame players_input_frame = 2;
inline int S2C_InputFrame::players_input_frame_size() const {
  return players_input_frame_.size();
}
inline void S2C_InputFrame::clear_players_input_frame() {
  players_input_frame_.Clear();
}
inline const ::pb::C2S_InputFrame& S2C_InputFrame::players_input_frame(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2C_InputFrame.players_input_frame)
  return players_input_frame_.Get(index);
}
inline ::pb::C2S_InputFrame* S2C_InputFrame::mutable_players_input_frame(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2C_InputFrame.players_input_frame)
  return players_input_frame_.Mutable(index);
}
inline ::pb::C2S_InputFrame* S2C_InputFrame::add_players_input_frame() {
  // @@protoc_insertion_point(field_add:pb.S2C_InputFrame.players_input_frame)
  return players_input_frame_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::C2S_InputFrame >*
S2C_InputFrame::mutable_players_input_frame() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2C_InputFrame.players_input_frame)
  return &players_input_frame_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::C2S_InputFrame >&
S2C_InputFrame::players_input_frame() const {
  // @@protoc_insertion_point(field_list:pb.S2C_InputFrame.players_input_frame)
  return players_input_frame_;
}

// bool isEmptyFrame = 3;
inline void S2C_InputFrame::clear_isemptyframe() {
  isemptyframe_ = false;
}
inline bool S2C_InputFrame::isemptyframe() const {
  // @@protoc_insertion_point(field_get:pb.S2C_InputFrame.isEmptyFrame)
  return isemptyframe_;
}
inline void S2C_InputFrame::set_isemptyframe(bool value) {
  
  isemptyframe_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_InputFrame.isEmptyFrame)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb::ID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::ID>() {
  return ::pb::ID_descriptor();
}
template <> struct is_proto_enum< ::pb::Code> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::Code>() {
  return ::pb::Code_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Message_2eproto__INCLUDED

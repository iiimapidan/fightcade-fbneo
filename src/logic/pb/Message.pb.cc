// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {
class C2S_ConnectDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2S_Connect> {
} _C2S_Connect_default_instance_;
class S2C_ConnectDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2C_Connect> {
} _S2C_Connect_default_instance_;
class C2S_CreateRoomDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2S_CreateRoom> {
} _C2S_CreateRoom_default_instance_;
class S2C_CreateRoomDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2C_CreateRoom> {
} _S2C_CreateRoom_default_instance_;
class C2S_JoinRoomDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2S_JoinRoom> {
} _C2S_JoinRoom_default_instance_;
class S2C_JoinRoomDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2C_JoinRoom> {
} _S2C_JoinRoom_default_instance_;
class C2S_ReadyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2S_Ready> {
} _C2S_Ready_default_instance_;
class S2C_StartDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2C_Start> {
} _S2C_Start_default_instance_;
class C2S_InputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2S_Input> {
} _C2S_Input_default_instance_;
class S2C_FrameDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2C_Frame> {
} _S2C_Frame_default_instance_;
class S2C_InputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2C_Input> {
} _S2C_Input_default_instance_;
class C2S_InputFrameDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2S_InputFrame> {
} _C2S_InputFrame_default_instance_;
class S2C_InputFrameDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2C_InputFrame> {
} _S2C_InputFrame_default_instance_;

namespace protobuf_Message_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[13];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_Connect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Connect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Connect, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_CreateRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_CreateRoom, roomname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_CreateRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_CreateRoom, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_CreateRoom, roomid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_JoinRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_JoinRoom, roomid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_JoinRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_JoinRoom, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_JoinRoom, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_Ready, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_Ready, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_Ready, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Start, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Start, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_Input, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_Input, frameindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_Input, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_Input, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_Input, input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_Input, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_Input, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_Input, isreleaseflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_Input, isemptyframe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_Input, isdiscard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_Input, iscalculated_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Frame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Frame, frameindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Frame, framecounts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Frame, frames_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Frame, isemptyframe_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Input, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Input, frameindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Input, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Input, input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Input, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_InputFrame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_InputFrame, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_InputFrame, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_InputFrame, input_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_InputFrame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_InputFrame, frameindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_InputFrame, players_input_frame_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_InputFrame, isemptyframe_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(C2S_Connect)},
  { 5, -1, sizeof(S2C_Connect)},
  { 11, -1, sizeof(C2S_CreateRoom)},
  { 17, -1, sizeof(S2C_CreateRoom)},
  { 24, -1, sizeof(C2S_JoinRoom)},
  { 30, -1, sizeof(S2C_JoinRoom)},
  { 37, -1, sizeof(C2S_Ready)},
  { 44, -1, sizeof(S2C_Start)},
  { 50, -1, sizeof(C2S_Input)},
  { 65, -1, sizeof(S2C_Frame)},
  { 74, -1, sizeof(S2C_Input)},
  { 83, -1, sizeof(C2S_InputFrame)},
  { 91, -1, sizeof(S2C_InputFrame)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2S_Connect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2C_Connect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2S_CreateRoom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2C_CreateRoom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2S_JoinRoom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2C_JoinRoom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2S_Ready_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2C_Start_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2S_Input_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2C_Frame_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2C_Input_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2S_InputFrame_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2C_InputFrame_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Message.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

}  // namespace

void TableStruct::Shutdown() {
  _C2S_Connect_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _S2C_Connect_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _C2S_CreateRoom_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _S2C_CreateRoom_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _C2S_JoinRoom_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _S2C_JoinRoom_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _C2S_Ready_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _S2C_Start_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _C2S_Input_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _S2C_Frame_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _S2C_Input_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _C2S_InputFrame_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _S2C_InputFrame_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _C2S_Connect_default_instance_.DefaultConstruct();
  _S2C_Connect_default_instance_.DefaultConstruct();
  _C2S_CreateRoom_default_instance_.DefaultConstruct();
  _S2C_CreateRoom_default_instance_.DefaultConstruct();
  _C2S_JoinRoom_default_instance_.DefaultConstruct();
  _S2C_JoinRoom_default_instance_.DefaultConstruct();
  _C2S_Ready_default_instance_.DefaultConstruct();
  _S2C_Start_default_instance_.DefaultConstruct();
  _C2S_Input_default_instance_.DefaultConstruct();
  _S2C_Frame_default_instance_.DefaultConstruct();
  _S2C_Input_default_instance_.DefaultConstruct();
  _C2S_InputFrame_default_instance_.DefaultConstruct();
  _S2C_InputFrame_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rMessage.proto\022\002pb\"\r\n\013C2S_Connect\"%\n\013S2"
      "C_Connect\022\026\n\004code\030\001 \001(\0162\010.pb.Code\"\"\n\016C2S"
      "_CreateRoom\022\020\n\010roomName\030\001 \001(\t\"8\n\016S2C_Cre"
      "ateRoom\022\026\n\004code\030\001 \001(\0162\010.pb.Code\022\016\n\006roomI"
      "d\030\002 \001(\r\"\036\n\014C2S_JoinRoom\022\016\n\006roomId\030\001 \001(\r\""
      "8\n\014S2C_JoinRoom\022\026\n\004code\030\001 \001(\0162\010.pb.Code\022"
      "\020\n\010playerId\030\002 \001(\r\"-\n\tC2S_Ready\022\016\n\006roomId"
      "\030\001 \001(\r\022\020\n\010playerId\030\002 \001(\r\"#\n\tS2C_Start\022\026\n"
      "\004code\030\001 \001(\0162\010.pb.Code\"\307\001\n\tC2S_Input\022\022\n\nf"
      "rameIndex\030\001 \001(\005\022\016\n\006roomId\030\002 \001(\r\022\020\n\010playe"
      "rId\030\003 \001(\r\022\r\n\005input\030\004 \001(\014\022\014\n\004name\030\005 \001(\t\022\021"
      "\n\ttimestamp\030\006 \001(\004\022\025\n\risReleaseFlag\030\007 \001(\010"
      "\022\024\n\014isEmptyFrame\030\010 \001(\010\022\021\n\tisDiscard\030\t \001("
      "\010\022\024\n\014isCalculated\030\n \001(\010\"i\n\tS2C_Frame\022\022\n\n"
      "frameIndex\030\001 \001(\005\022\023\n\013frameCounts\030\002 \001(\005\022\035\n"
      "\006frames\030\003 \003(\0132\r.pb.C2S_Input\022\024\n\014isEmptyF"
      "rame\030\004 \001(\010\"P\n\tS2C_Input\022\022\n\nframeIndex\030\001 "
      "\001(\005\022\016\n\006roomId\030\002 \001(\r\022\r\n\005input\030\003 \001(\014\022\020\n\010pl"
      "ayerId\030\004 \001(\r\"U\n\016C2S_InputFrame\022\016\n\006roomId"
      "\030\001 \001(\r\022\020\n\010playerId\030\002 \001(\r\022!\n\ninput_data\030\003"
      " \003(\0132\r.pb.C2S_Input\"k\n\016S2C_InputFrame\022\022\n"
      "\nframeIndex\030\001 \001(\005\022/\n\023players_input_frame"
      "\030\002 \003(\0132\022.pb.C2S_InputFrame\022\024\n\014isEmptyFra"
      "me\030\003 \001(\010*\352\001\n\002ID\022\014\n\010ID_Begin\020\000\022\016\n\nID_Conn"
      "ect\020\001\022\021\n\rID_CreateRoom\020\002\022\017\n\013ID_JoinRoom\020"
      "\003\022\014\n\010ID_Ready\020\004\022\014\n\010ID_Start\020\005\022\014\n\010ID_Inpu"
      "t\020\006\022\014\n\010ID_Frame\020\007\022\013\n\007ID_PING\020\010\022\013\n\007ID_PON"
      "G\020\t\022\021\n\rID_StartInput\020\n\022\017\n\013ID_EndInput\020\013\022"
      "\025\n\021ID_C2S_InputFrame\020\014\022\025\n\021ID_S2C_InputFr"
      "ame\020\r*\022\n\004Code\022\n\n\006ERR_Ok\020\000B\005Z\003/pbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1200);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Message.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_Message_2eproto

const ::google::protobuf::EnumDescriptor* ID_descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_enum_descriptors[0];
}
bool ID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Code_descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_enum_descriptors[1];
}
bool Code_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_Connect::C2S_Connect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_Connect)
}
C2S_Connect::C2S_Connect(const C2S_Connect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_Connect)
}

void C2S_Connect::SharedCtor() {
  _cached_size_ = 0;
}

C2S_Connect::~C2S_Connect() {
  // @@protoc_insertion_point(destructor:pb.C2S_Connect)
  SharedDtor();
}

void C2S_Connect::SharedDtor() {
}

void C2S_Connect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_Connect::descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2S_Connect& C2S_Connect::default_instance() {
  protobuf_Message_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2S_Connect* C2S_Connect::New(::google::protobuf::Arena* arena) const {
  C2S_Connect* n = new C2S_Connect;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_Connect::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_Connect)
}

bool C2S_Connect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_Connect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_Connect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_Connect)
  return false;
#undef DO_
}

void C2S_Connect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_Connect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_end:pb.C2S_Connect)
}

::google::protobuf::uint8* C2S_Connect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_Connect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_Connect)
  return target;
}

size_t C2S_Connect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_Connect)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_Connect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_Connect)
  GOOGLE_DCHECK_NE(&from, this);
  const C2S_Connect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_Connect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_Connect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_Connect)
    MergeFrom(*source);
  }
}

void C2S_Connect::MergeFrom(const C2S_Connect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_Connect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void C2S_Connect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_Connect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_Connect::CopyFrom(const C2S_Connect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_Connect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_Connect::IsInitialized() const {
  return true;
}

void C2S_Connect::Swap(C2S_Connect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_Connect::InternalSwap(C2S_Connect* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_Connect::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_Connect

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_Connect::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_Connect::S2C_Connect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2C_Connect)
}
S2C_Connect::S2C_Connect(const S2C_Connect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:pb.S2C_Connect)
}

void S2C_Connect::SharedCtor() {
  code_ = 0;
  _cached_size_ = 0;
}

S2C_Connect::~S2C_Connect() {
  // @@protoc_insertion_point(destructor:pb.S2C_Connect)
  SharedDtor();
}

void S2C_Connect::SharedDtor() {
}

void S2C_Connect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_Connect::descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2C_Connect& S2C_Connect::default_instance() {
  protobuf_Message_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2C_Connect* S2C_Connect::New(::google::protobuf::Arena* arena) const {
  S2C_Connect* n = new S2C_Connect;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_Connect::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2C_Connect)
  code_ = 0;
}

bool S2C_Connect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2C_Connect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pb.Code code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_code(static_cast< ::pb::Code >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2C_Connect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2C_Connect)
  return false;
#undef DO_
}

void S2C_Connect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2C_Connect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.Code code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2C_Connect)
}

::google::protobuf::uint8* S2C_Connect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2C_Connect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.Code code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2C_Connect)
  return target;
}

size_t S2C_Connect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2C_Connect)
  size_t total_size = 0;

  // .pb.Code code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_Connect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2C_Connect)
  GOOGLE_DCHECK_NE(&from, this);
  const S2C_Connect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_Connect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2C_Connect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2C_Connect)
    MergeFrom(*source);
  }
}

void S2C_Connect::MergeFrom(const S2C_Connect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2C_Connect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    set_code(from.code());
  }
}

void S2C_Connect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2C_Connect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_Connect::CopyFrom(const S2C_Connect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2C_Connect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_Connect::IsInitialized() const {
  return true;
}

void S2C_Connect::Swap(S2C_Connect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_Connect::InternalSwap(S2C_Connect* other) {
  std::swap(code_, other->code_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_Connect::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_Connect

// .pb.Code code = 1;
void S2C_Connect::clear_code() {
  code_ = 0;
}
::pb::Code S2C_Connect::code() const {
  // @@protoc_insertion_point(field_get:pb.S2C_Connect.code)
  return static_cast< ::pb::Code >(code_);
}
void S2C_Connect::set_code(::pb::Code value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_Connect.code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_CreateRoom::kRoomNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_CreateRoom::C2S_CreateRoom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_CreateRoom)
}
C2S_CreateRoom::C2S_CreateRoom(const C2S_CreateRoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.roomname().size() > 0) {
    roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.C2S_CreateRoom)
}

void C2S_CreateRoom::SharedCtor() {
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

C2S_CreateRoom::~C2S_CreateRoom() {
  // @@protoc_insertion_point(destructor:pb.C2S_CreateRoom)
  SharedDtor();
}

void C2S_CreateRoom::SharedDtor() {
  roomname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void C2S_CreateRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_CreateRoom::descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2S_CreateRoom& C2S_CreateRoom::default_instance() {
  protobuf_Message_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2S_CreateRoom* C2S_CreateRoom::New(::google::protobuf::Arena* arena) const {
  C2S_CreateRoom* n = new C2S_CreateRoom;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_CreateRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_CreateRoom)
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool C2S_CreateRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_CreateRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string roomName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roomname().data(), this->roomname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2S_CreateRoom.roomName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_CreateRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_CreateRoom)
  return false;
#undef DO_
}

void C2S_CreateRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_CreateRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roomName = 1;
  if (this->roomname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomname().data(), this->roomname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_CreateRoom.roomName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->roomname(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2S_CreateRoom)
}

::google::protobuf::uint8* C2S_CreateRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_CreateRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roomName = 1;
  if (this->roomname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomname().data(), this->roomname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_CreateRoom.roomName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_CreateRoom)
  return target;
}

size_t C2S_CreateRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_CreateRoom)
  size_t total_size = 0;

  // string roomName = 1;
  if (this->roomname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_CreateRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_CreateRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const C2S_CreateRoom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_CreateRoom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_CreateRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_CreateRoom)
    MergeFrom(*source);
  }
}

void C2S_CreateRoom::MergeFrom(const C2S_CreateRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_CreateRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomname().size() > 0) {

    roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
  }
}

void C2S_CreateRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_CreateRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_CreateRoom::CopyFrom(const C2S_CreateRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_CreateRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_CreateRoom::IsInitialized() const {
  return true;
}

void C2S_CreateRoom::Swap(C2S_CreateRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_CreateRoom::InternalSwap(C2S_CreateRoom* other) {
  roomname_.Swap(&other->roomname_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_CreateRoom::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_CreateRoom

// string roomName = 1;
void C2S_CreateRoom::clear_roomname() {
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& C2S_CreateRoom::roomname() const {
  // @@protoc_insertion_point(field_get:pb.C2S_CreateRoom.roomName)
  return roomname_.GetNoArena();
}
void C2S_CreateRoom::set_roomname(const ::std::string& value) {
  
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2S_CreateRoom.roomName)
}
#if LANG_CXX11
void C2S_CreateRoom::set_roomname(::std::string&& value) {
  
  roomname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.C2S_CreateRoom.roomName)
}
#endif
void C2S_CreateRoom::set_roomname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2S_CreateRoom.roomName)
}
void C2S_CreateRoom::set_roomname(const char* value, size_t size) {
  
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2S_CreateRoom.roomName)
}
::std::string* C2S_CreateRoom::mutable_roomname() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2S_CreateRoom.roomName)
  return roomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* C2S_CreateRoom::release_roomname() {
  // @@protoc_insertion_point(field_release:pb.C2S_CreateRoom.roomName)
  
  return roomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void C2S_CreateRoom::set_allocated_roomname(::std::string* roomname) {
  if (roomname != NULL) {
    
  } else {
    
  }
  roomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomname);
  // @@protoc_insertion_point(field_set_allocated:pb.C2S_CreateRoom.roomName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_CreateRoom::kCodeFieldNumber;
const int S2C_CreateRoom::kRoomIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_CreateRoom::S2C_CreateRoom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2C_CreateRoom)
}
S2C_CreateRoom::S2C_CreateRoom(const S2C_CreateRoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&code_) + sizeof(roomid_));
  // @@protoc_insertion_point(copy_constructor:pb.S2C_CreateRoom)
}

void S2C_CreateRoom::SharedCtor() {
  ::memset(&code_, 0, reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&code_) + sizeof(roomid_));
  _cached_size_ = 0;
}

S2C_CreateRoom::~S2C_CreateRoom() {
  // @@protoc_insertion_point(destructor:pb.S2C_CreateRoom)
  SharedDtor();
}

void S2C_CreateRoom::SharedDtor() {
}

void S2C_CreateRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_CreateRoom::descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2C_CreateRoom& S2C_CreateRoom::default_instance() {
  protobuf_Message_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2C_CreateRoom* S2C_CreateRoom::New(::google::protobuf::Arena* arena) const {
  S2C_CreateRoom* n = new S2C_CreateRoom;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_CreateRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2C_CreateRoom)
  ::memset(&code_, 0, reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&code_) + sizeof(roomid_));
}

bool S2C_CreateRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2C_CreateRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pb.Code code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_code(static_cast< ::pb::Code >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 roomId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2C_CreateRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2C_CreateRoom)
  return false;
#undef DO_
}

void S2C_CreateRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2C_CreateRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.Code code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  // uint32 roomId = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->roomid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2C_CreateRoom)
}

::google::protobuf::uint8* S2C_CreateRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2C_CreateRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.Code code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  // uint32 roomId = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->roomid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2C_CreateRoom)
  return target;
}

size_t S2C_CreateRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2C_CreateRoom)
  size_t total_size = 0;

  // .pb.Code code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  // uint32 roomId = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_CreateRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2C_CreateRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const S2C_CreateRoom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_CreateRoom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2C_CreateRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2C_CreateRoom)
    MergeFrom(*source);
  }
}

void S2C_CreateRoom::MergeFrom(const S2C_CreateRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2C_CreateRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void S2C_CreateRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2C_CreateRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_CreateRoom::CopyFrom(const S2C_CreateRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2C_CreateRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_CreateRoom::IsInitialized() const {
  return true;
}

void S2C_CreateRoom::Swap(S2C_CreateRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_CreateRoom::InternalSwap(S2C_CreateRoom* other) {
  std::swap(code_, other->code_);
  std::swap(roomid_, other->roomid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_CreateRoom::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_CreateRoom

// .pb.Code code = 1;
void S2C_CreateRoom::clear_code() {
  code_ = 0;
}
::pb::Code S2C_CreateRoom::code() const {
  // @@protoc_insertion_point(field_get:pb.S2C_CreateRoom.code)
  return static_cast< ::pb::Code >(code_);
}
void S2C_CreateRoom::set_code(::pb::Code value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_CreateRoom.code)
}

// uint32 roomId = 2;
void S2C_CreateRoom::clear_roomid() {
  roomid_ = 0u;
}
::google::protobuf::uint32 S2C_CreateRoom::roomid() const {
  // @@protoc_insertion_point(field_get:pb.S2C_CreateRoom.roomId)
  return roomid_;
}
void S2C_CreateRoom::set_roomid(::google::protobuf::uint32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_CreateRoom.roomId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_JoinRoom::kRoomIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_JoinRoom::C2S_JoinRoom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_JoinRoom)
}
C2S_JoinRoom::C2S_JoinRoom(const C2S_JoinRoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomid_ = from.roomid_;
  // @@protoc_insertion_point(copy_constructor:pb.C2S_JoinRoom)
}

void C2S_JoinRoom::SharedCtor() {
  roomid_ = 0u;
  _cached_size_ = 0;
}

C2S_JoinRoom::~C2S_JoinRoom() {
  // @@protoc_insertion_point(destructor:pb.C2S_JoinRoom)
  SharedDtor();
}

void C2S_JoinRoom::SharedDtor() {
}

void C2S_JoinRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_JoinRoom::descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2S_JoinRoom& C2S_JoinRoom::default_instance() {
  protobuf_Message_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2S_JoinRoom* C2S_JoinRoom::New(::google::protobuf::Arena* arena) const {
  C2S_JoinRoom* n = new C2S_JoinRoom;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_JoinRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_JoinRoom)
  roomid_ = 0u;
}

bool C2S_JoinRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_JoinRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 roomId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_JoinRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_JoinRoom)
  return false;
#undef DO_
}

void C2S_JoinRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_JoinRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 roomId = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->roomid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2S_JoinRoom)
}

::google::protobuf::uint8* C2S_JoinRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_JoinRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 roomId = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->roomid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_JoinRoom)
  return target;
}

size_t C2S_JoinRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_JoinRoom)
  size_t total_size = 0;

  // uint32 roomId = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_JoinRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_JoinRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const C2S_JoinRoom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_JoinRoom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_JoinRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_JoinRoom)
    MergeFrom(*source);
  }
}

void C2S_JoinRoom::MergeFrom(const C2S_JoinRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_JoinRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void C2S_JoinRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_JoinRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_JoinRoom::CopyFrom(const C2S_JoinRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_JoinRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_JoinRoom::IsInitialized() const {
  return true;
}

void C2S_JoinRoom::Swap(C2S_JoinRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_JoinRoom::InternalSwap(C2S_JoinRoom* other) {
  std::swap(roomid_, other->roomid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_JoinRoom::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_JoinRoom

// uint32 roomId = 1;
void C2S_JoinRoom::clear_roomid() {
  roomid_ = 0u;
}
::google::protobuf::uint32 C2S_JoinRoom::roomid() const {
  // @@protoc_insertion_point(field_get:pb.C2S_JoinRoom.roomId)
  return roomid_;
}
void C2S_JoinRoom::set_roomid(::google::protobuf::uint32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_JoinRoom.roomId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_JoinRoom::kCodeFieldNumber;
const int S2C_JoinRoom::kPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_JoinRoom::S2C_JoinRoom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2C_JoinRoom)
}
S2C_JoinRoom::S2C_JoinRoom(const S2C_JoinRoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&code_) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:pb.S2C_JoinRoom)
}

void S2C_JoinRoom::SharedCtor() {
  ::memset(&code_, 0, reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&code_) + sizeof(playerid_));
  _cached_size_ = 0;
}

S2C_JoinRoom::~S2C_JoinRoom() {
  // @@protoc_insertion_point(destructor:pb.S2C_JoinRoom)
  SharedDtor();
}

void S2C_JoinRoom::SharedDtor() {
}

void S2C_JoinRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_JoinRoom::descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2C_JoinRoom& S2C_JoinRoom::default_instance() {
  protobuf_Message_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2C_JoinRoom* S2C_JoinRoom::New(::google::protobuf::Arena* arena) const {
  S2C_JoinRoom* n = new S2C_JoinRoom;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_JoinRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2C_JoinRoom)
  ::memset(&code_, 0, reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&code_) + sizeof(playerid_));
}

bool S2C_JoinRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2C_JoinRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pb.Code code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_code(static_cast< ::pb::Code >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 playerId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2C_JoinRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2C_JoinRoom)
  return false;
#undef DO_
}

void S2C_JoinRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2C_JoinRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.Code code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  // uint32 playerId = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->playerid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2C_JoinRoom)
}

::google::protobuf::uint8* S2C_JoinRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2C_JoinRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.Code code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  // uint32 playerId = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->playerid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2C_JoinRoom)
  return target;
}

size_t S2C_JoinRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2C_JoinRoom)
  size_t total_size = 0;

  // .pb.Code code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  // uint32 playerId = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_JoinRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2C_JoinRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const S2C_JoinRoom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_JoinRoom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2C_JoinRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2C_JoinRoom)
    MergeFrom(*source);
  }
}

void S2C_JoinRoom::MergeFrom(const S2C_JoinRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2C_JoinRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2C_JoinRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2C_JoinRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_JoinRoom::CopyFrom(const S2C_JoinRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2C_JoinRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_JoinRoom::IsInitialized() const {
  return true;
}

void S2C_JoinRoom::Swap(S2C_JoinRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_JoinRoom::InternalSwap(S2C_JoinRoom* other) {
  std::swap(code_, other->code_);
  std::swap(playerid_, other->playerid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_JoinRoom::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_JoinRoom

// .pb.Code code = 1;
void S2C_JoinRoom::clear_code() {
  code_ = 0;
}
::pb::Code S2C_JoinRoom::code() const {
  // @@protoc_insertion_point(field_get:pb.S2C_JoinRoom.code)
  return static_cast< ::pb::Code >(code_);
}
void S2C_JoinRoom::set_code(::pb::Code value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_JoinRoom.code)
}

// uint32 playerId = 2;
void S2C_JoinRoom::clear_playerid() {
  playerid_ = 0u;
}
::google::protobuf::uint32 S2C_JoinRoom::playerid() const {
  // @@protoc_insertion_point(field_get:pb.S2C_JoinRoom.playerId)
  return playerid_;
}
void S2C_JoinRoom::set_playerid(::google::protobuf::uint32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_JoinRoom.playerId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_Ready::kRoomIdFieldNumber;
const int C2S_Ready::kPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_Ready::C2S_Ready()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_Ready)
}
C2S_Ready::C2S_Ready(const C2S_Ready& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roomid_, &from.roomid_,
    reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&roomid_) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:pb.C2S_Ready)
}

void C2S_Ready::SharedCtor() {
  ::memset(&roomid_, 0, reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&roomid_) + sizeof(playerid_));
  _cached_size_ = 0;
}

C2S_Ready::~C2S_Ready() {
  // @@protoc_insertion_point(destructor:pb.C2S_Ready)
  SharedDtor();
}

void C2S_Ready::SharedDtor() {
}

void C2S_Ready::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_Ready::descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2S_Ready& C2S_Ready::default_instance() {
  protobuf_Message_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2S_Ready* C2S_Ready::New(::google::protobuf::Arena* arena) const {
  C2S_Ready* n = new C2S_Ready;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_Ready::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_Ready)
  ::memset(&roomid_, 0, reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&roomid_) + sizeof(playerid_));
}

bool C2S_Ready::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_Ready)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 roomId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 playerId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_Ready)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_Ready)
  return false;
#undef DO_
}

void C2S_Ready::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_Ready)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 roomId = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->roomid(), output);
  }

  // uint32 playerId = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->playerid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2S_Ready)
}

::google::protobuf::uint8* C2S_Ready::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_Ready)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 roomId = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->roomid(), target);
  }

  // uint32 playerId = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->playerid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_Ready)
  return target;
}

size_t C2S_Ready::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_Ready)
  size_t total_size = 0;

  // uint32 roomId = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());
  }

  // uint32 playerId = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_Ready::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_Ready)
  GOOGLE_DCHECK_NE(&from, this);
  const C2S_Ready* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_Ready>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_Ready)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_Ready)
    MergeFrom(*source);
  }
}

void C2S_Ready::MergeFrom(const C2S_Ready& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_Ready)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void C2S_Ready::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_Ready)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_Ready::CopyFrom(const C2S_Ready& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_Ready)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_Ready::IsInitialized() const {
  return true;
}

void C2S_Ready::Swap(C2S_Ready* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_Ready::InternalSwap(C2S_Ready* other) {
  std::swap(roomid_, other->roomid_);
  std::swap(playerid_, other->playerid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_Ready::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_Ready

// uint32 roomId = 1;
void C2S_Ready::clear_roomid() {
  roomid_ = 0u;
}
::google::protobuf::uint32 C2S_Ready::roomid() const {
  // @@protoc_insertion_point(field_get:pb.C2S_Ready.roomId)
  return roomid_;
}
void C2S_Ready::set_roomid(::google::protobuf::uint32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_Ready.roomId)
}

// uint32 playerId = 2;
void C2S_Ready::clear_playerid() {
  playerid_ = 0u;
}
::google::protobuf::uint32 C2S_Ready::playerid() const {
  // @@protoc_insertion_point(field_get:pb.C2S_Ready.playerId)
  return playerid_;
}
void C2S_Ready::set_playerid(::google::protobuf::uint32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_Ready.playerId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_Start::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_Start::S2C_Start()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2C_Start)
}
S2C_Start::S2C_Start(const S2C_Start& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:pb.S2C_Start)
}

void S2C_Start::SharedCtor() {
  code_ = 0;
  _cached_size_ = 0;
}

S2C_Start::~S2C_Start() {
  // @@protoc_insertion_point(destructor:pb.S2C_Start)
  SharedDtor();
}

void S2C_Start::SharedDtor() {
}

void S2C_Start::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_Start::descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2C_Start& S2C_Start::default_instance() {
  protobuf_Message_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2C_Start* S2C_Start::New(::google::protobuf::Arena* arena) const {
  S2C_Start* n = new S2C_Start;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_Start::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2C_Start)
  code_ = 0;
}

bool S2C_Start::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2C_Start)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pb.Code code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_code(static_cast< ::pb::Code >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2C_Start)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2C_Start)
  return false;
#undef DO_
}

void S2C_Start::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2C_Start)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.Code code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2C_Start)
}

::google::protobuf::uint8* S2C_Start::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2C_Start)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.Code code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2C_Start)
  return target;
}

size_t S2C_Start::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2C_Start)
  size_t total_size = 0;

  // .pb.Code code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_Start::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2C_Start)
  GOOGLE_DCHECK_NE(&from, this);
  const S2C_Start* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_Start>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2C_Start)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2C_Start)
    MergeFrom(*source);
  }
}

void S2C_Start::MergeFrom(const S2C_Start& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2C_Start)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    set_code(from.code());
  }
}

void S2C_Start::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2C_Start)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_Start::CopyFrom(const S2C_Start& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2C_Start)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_Start::IsInitialized() const {
  return true;
}

void S2C_Start::Swap(S2C_Start* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_Start::InternalSwap(S2C_Start* other) {
  std::swap(code_, other->code_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_Start::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_Start

// .pb.Code code = 1;
void S2C_Start::clear_code() {
  code_ = 0;
}
::pb::Code S2C_Start::code() const {
  // @@protoc_insertion_point(field_get:pb.S2C_Start.code)
  return static_cast< ::pb::Code >(code_);
}
void S2C_Start::set_code(::pb::Code value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_Start.code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_Input::kFrameIndexFieldNumber;
const int C2S_Input::kRoomIdFieldNumber;
const int C2S_Input::kPlayerIdFieldNumber;
const int C2S_Input::kInputFieldNumber;
const int C2S_Input::kNameFieldNumber;
const int C2S_Input::kTimestampFieldNumber;
const int C2S_Input::kIsReleaseFlagFieldNumber;
const int C2S_Input::kIsEmptyFrameFieldNumber;
const int C2S_Input::kIsDiscardFieldNumber;
const int C2S_Input::kIsCalculatedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_Input::C2S_Input()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_Input)
}
C2S_Input::C2S_Input(const C2S_Input& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.input().size() > 0) {
    input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&frameindex_, &from.frameindex_,
    reinterpret_cast<char*>(&iscalculated_) -
    reinterpret_cast<char*>(&frameindex_) + sizeof(iscalculated_));
  // @@protoc_insertion_point(copy_constructor:pb.C2S_Input)
}

void C2S_Input::SharedCtor() {
  input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&frameindex_, 0, reinterpret_cast<char*>(&iscalculated_) -
    reinterpret_cast<char*>(&frameindex_) + sizeof(iscalculated_));
  _cached_size_ = 0;
}

C2S_Input::~C2S_Input() {
  // @@protoc_insertion_point(destructor:pb.C2S_Input)
  SharedDtor();
}

void C2S_Input::SharedDtor() {
  input_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void C2S_Input::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_Input::descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2S_Input& C2S_Input::default_instance() {
  protobuf_Message_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2S_Input* C2S_Input::New(::google::protobuf::Arena* arena) const {
  C2S_Input* n = new C2S_Input;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_Input::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_Input)
  input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&frameindex_, 0, reinterpret_cast<char*>(&iscalculated_) -
    reinterpret_cast<char*>(&frameindex_) + sizeof(iscalculated_));
}

bool C2S_Input::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_Input)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 frameIndex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frameindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 roomId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 playerId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes input = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2S_Input.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 timestamp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isReleaseFlag = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isreleaseflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isEmptyFrame = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isemptyframe_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isDiscard = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isdiscard_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isCalculated = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &iscalculated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_Input)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_Input)
  return false;
#undef DO_
}

void C2S_Input::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 frameIndex = 1;
  if (this->frameindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->frameindex(), output);
  }

  // uint32 roomId = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->roomid(), output);
  }

  // uint32 playerId = 3;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->playerid(), output);
  }

  // bytes input = 4;
  if (this->input().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->input(), output);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_Input.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // uint64 timestamp = 6;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->timestamp(), output);
  }

  // bool isReleaseFlag = 7;
  if (this->isreleaseflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->isreleaseflag(), output);
  }

  // bool isEmptyFrame = 8;
  if (this->isemptyframe() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->isemptyframe(), output);
  }

  // bool isDiscard = 9;
  if (this->isdiscard() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->isdiscard(), output);
  }

  // bool isCalculated = 10;
  if (this->iscalculated() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->iscalculated(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2S_Input)
}

::google::protobuf::uint8* C2S_Input::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 frameIndex = 1;
  if (this->frameindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->frameindex(), target);
  }

  // uint32 roomId = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->roomid(), target);
  }

  // uint32 playerId = 3;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->playerid(), target);
  }

  // bytes input = 4;
  if (this->input().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->input(), target);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_Input.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // uint64 timestamp = 6;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->timestamp(), target);
  }

  // bool isReleaseFlag = 7;
  if (this->isreleaseflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->isreleaseflag(), target);
  }

  // bool isEmptyFrame = 8;
  if (this->isemptyframe() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->isemptyframe(), target);
  }

  // bool isDiscard = 9;
  if (this->isdiscard() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->isdiscard(), target);
  }

  // bool isCalculated = 10;
  if (this->iscalculated() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->iscalculated(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_Input)
  return target;
}

size_t C2S_Input::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_Input)
  size_t total_size = 0;

  // bytes input = 4;
  if (this->input().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->input());
  }

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 frameIndex = 1;
  if (this->frameindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frameindex());
  }

  // uint32 roomId = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());
  }

  // uint64 timestamp = 6;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  // uint32 playerId = 3;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->playerid());
  }

  // bool isReleaseFlag = 7;
  if (this->isreleaseflag() != 0) {
    total_size += 1 + 1;
  }

  // bool isEmptyFrame = 8;
  if (this->isemptyframe() != 0) {
    total_size += 1 + 1;
  }

  // bool isDiscard = 9;
  if (this->isdiscard() != 0) {
    total_size += 1 + 1;
  }

  // bool isCalculated = 10;
  if (this->iscalculated() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_Input::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_Input)
  GOOGLE_DCHECK_NE(&from, this);
  const C2S_Input* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_Input>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_Input)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_Input)
    MergeFrom(*source);
  }
}

void C2S_Input::MergeFrom(const C2S_Input& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_Input)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.input().size() > 0) {

    input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.frameindex() != 0) {
    set_frameindex(from.frameindex());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.isreleaseflag() != 0) {
    set_isreleaseflag(from.isreleaseflag());
  }
  if (from.isemptyframe() != 0) {
    set_isemptyframe(from.isemptyframe());
  }
  if (from.isdiscard() != 0) {
    set_isdiscard(from.isdiscard());
  }
  if (from.iscalculated() != 0) {
    set_iscalculated(from.iscalculated());
  }
}

void C2S_Input::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_Input::CopyFrom(const C2S_Input& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_Input::IsInitialized() const {
  return true;
}

void C2S_Input::Swap(C2S_Input* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_Input::InternalSwap(C2S_Input* other) {
  input_.Swap(&other->input_);
  name_.Swap(&other->name_);
  std::swap(frameindex_, other->frameindex_);
  std::swap(roomid_, other->roomid_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(playerid_, other->playerid_);
  std::swap(isreleaseflag_, other->isreleaseflag_);
  std::swap(isemptyframe_, other->isemptyframe_);
  std::swap(isdiscard_, other->isdiscard_);
  std::swap(iscalculated_, other->iscalculated_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_Input::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_Input

// int32 frameIndex = 1;
void C2S_Input::clear_frameindex() {
  frameindex_ = 0;
}
::google::protobuf::int32 C2S_Input::frameindex() const {
  // @@protoc_insertion_point(field_get:pb.C2S_Input.frameIndex)
  return frameindex_;
}
void C2S_Input::set_frameindex(::google::protobuf::int32 value) {
  
  frameindex_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_Input.frameIndex)
}

// uint32 roomId = 2;
void C2S_Input::clear_roomid() {
  roomid_ = 0u;
}
::google::protobuf::uint32 C2S_Input::roomid() const {
  // @@protoc_insertion_point(field_get:pb.C2S_Input.roomId)
  return roomid_;
}
void C2S_Input::set_roomid(::google::protobuf::uint32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_Input.roomId)
}

// uint32 playerId = 3;
void C2S_Input::clear_playerid() {
  playerid_ = 0u;
}
::google::protobuf::uint32 C2S_Input::playerid() const {
  // @@protoc_insertion_point(field_get:pb.C2S_Input.playerId)
  return playerid_;
}
void C2S_Input::set_playerid(::google::protobuf::uint32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_Input.playerId)
}

// bytes input = 4;
void C2S_Input::clear_input() {
  input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& C2S_Input::input() const {
  // @@protoc_insertion_point(field_get:pb.C2S_Input.input)
  return input_.GetNoArena();
}
void C2S_Input::set_input(const ::std::string& value) {
  
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2S_Input.input)
}
#if LANG_CXX11
void C2S_Input::set_input(::std::string&& value) {
  
  input_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.C2S_Input.input)
}
#endif
void C2S_Input::set_input(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2S_Input.input)
}
void C2S_Input::set_input(const void* value, size_t size) {
  
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2S_Input.input)
}
::std::string* C2S_Input::mutable_input() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2S_Input.input)
  return input_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* C2S_Input::release_input() {
  // @@protoc_insertion_point(field_release:pb.C2S_Input.input)
  
  return input_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void C2S_Input::set_allocated_input(::std::string* input) {
  if (input != NULL) {
    
  } else {
    
  }
  input_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input);
  // @@protoc_insertion_point(field_set_allocated:pb.C2S_Input.input)
}

// string name = 5;
void C2S_Input::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& C2S_Input::name() const {
  // @@protoc_insertion_point(field_get:pb.C2S_Input.name)
  return name_.GetNoArena();
}
void C2S_Input::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2S_Input.name)
}
#if LANG_CXX11
void C2S_Input::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.C2S_Input.name)
}
#endif
void C2S_Input::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2S_Input.name)
}
void C2S_Input::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2S_Input.name)
}
::std::string* C2S_Input::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2S_Input.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* C2S_Input::release_name() {
  // @@protoc_insertion_point(field_release:pb.C2S_Input.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void C2S_Input::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.C2S_Input.name)
}

// uint64 timestamp = 6;
void C2S_Input::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 C2S_Input::timestamp() const {
  // @@protoc_insertion_point(field_get:pb.C2S_Input.timestamp)
  return timestamp_;
}
void C2S_Input::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_Input.timestamp)
}

// bool isReleaseFlag = 7;
void C2S_Input::clear_isreleaseflag() {
  isreleaseflag_ = false;
}
bool C2S_Input::isreleaseflag() const {
  // @@protoc_insertion_point(field_get:pb.C2S_Input.isReleaseFlag)
  return isreleaseflag_;
}
void C2S_Input::set_isreleaseflag(bool value) {
  
  isreleaseflag_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_Input.isReleaseFlag)
}

// bool isEmptyFrame = 8;
void C2S_Input::clear_isemptyframe() {
  isemptyframe_ = false;
}
bool C2S_Input::isemptyframe() const {
  // @@protoc_insertion_point(field_get:pb.C2S_Input.isEmptyFrame)
  return isemptyframe_;
}
void C2S_Input::set_isemptyframe(bool value) {
  
  isemptyframe_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_Input.isEmptyFrame)
}

// bool isDiscard = 9;
void C2S_Input::clear_isdiscard() {
  isdiscard_ = false;
}
bool C2S_Input::isdiscard() const {
  // @@protoc_insertion_point(field_get:pb.C2S_Input.isDiscard)
  return isdiscard_;
}
void C2S_Input::set_isdiscard(bool value) {
  
  isdiscard_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_Input.isDiscard)
}

// bool isCalculated = 10;
void C2S_Input::clear_iscalculated() {
  iscalculated_ = false;
}
bool C2S_Input::iscalculated() const {
  // @@protoc_insertion_point(field_get:pb.C2S_Input.isCalculated)
  return iscalculated_;
}
void C2S_Input::set_iscalculated(bool value) {
  
  iscalculated_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_Input.isCalculated)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_Frame::kFrameIndexFieldNumber;
const int S2C_Frame::kFrameCountsFieldNumber;
const int S2C_Frame::kFramesFieldNumber;
const int S2C_Frame::kIsEmptyFrameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_Frame::S2C_Frame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2C_Frame)
}
S2C_Frame::S2C_Frame(const S2C_Frame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      frames_(from.frames_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&frameindex_, &from.frameindex_,
    reinterpret_cast<char*>(&isemptyframe_) -
    reinterpret_cast<char*>(&frameindex_) + sizeof(isemptyframe_));
  // @@protoc_insertion_point(copy_constructor:pb.S2C_Frame)
}

void S2C_Frame::SharedCtor() {
  ::memset(&frameindex_, 0, reinterpret_cast<char*>(&isemptyframe_) -
    reinterpret_cast<char*>(&frameindex_) + sizeof(isemptyframe_));
  _cached_size_ = 0;
}

S2C_Frame::~S2C_Frame() {
  // @@protoc_insertion_point(destructor:pb.S2C_Frame)
  SharedDtor();
}

void S2C_Frame::SharedDtor() {
}

void S2C_Frame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_Frame::descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2C_Frame& S2C_Frame::default_instance() {
  protobuf_Message_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2C_Frame* S2C_Frame::New(::google::protobuf::Arena* arena) const {
  S2C_Frame* n = new S2C_Frame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_Frame::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2C_Frame)
  frames_.Clear();
  ::memset(&frameindex_, 0, reinterpret_cast<char*>(&isemptyframe_) -
    reinterpret_cast<char*>(&frameindex_) + sizeof(isemptyframe_));
}

bool S2C_Frame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2C_Frame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 frameIndex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frameindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 frameCounts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &framecounts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.C2S_Input frames = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_frames()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isEmptyFrame = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isemptyframe_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2C_Frame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2C_Frame)
  return false;
#undef DO_
}

void S2C_Frame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2C_Frame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 frameIndex = 1;
  if (this->frameindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->frameindex(), output);
  }

  // int32 frameCounts = 2;
  if (this->framecounts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->framecounts(), output);
  }

  // repeated .pb.C2S_Input frames = 3;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->frames(i), output);
  }

  // bool isEmptyFrame = 4;
  if (this->isemptyframe() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->isemptyframe(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2C_Frame)
}

::google::protobuf::uint8* S2C_Frame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2C_Frame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 frameIndex = 1;
  if (this->frameindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->frameindex(), target);
  }

  // int32 frameCounts = 2;
  if (this->framecounts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->framecounts(), target);
  }

  // repeated .pb.C2S_Input frames = 3;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->frames(i), deterministic, target);
  }

  // bool isEmptyFrame = 4;
  if (this->isemptyframe() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->isemptyframe(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2C_Frame)
  return target;
}

size_t S2C_Frame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2C_Frame)
  size_t total_size = 0;

  // repeated .pb.C2S_Input frames = 3;
  {
    unsigned int count = this->frames_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->frames(i));
    }
  }

  // int32 frameIndex = 1;
  if (this->frameindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frameindex());
  }

  // int32 frameCounts = 2;
  if (this->framecounts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->framecounts());
  }

  // bool isEmptyFrame = 4;
  if (this->isemptyframe() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_Frame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2C_Frame)
  GOOGLE_DCHECK_NE(&from, this);
  const S2C_Frame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_Frame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2C_Frame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2C_Frame)
    MergeFrom(*source);
  }
}

void S2C_Frame::MergeFrom(const S2C_Frame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2C_Frame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  frames_.MergeFrom(from.frames_);
  if (from.frameindex() != 0) {
    set_frameindex(from.frameindex());
  }
  if (from.framecounts() != 0) {
    set_framecounts(from.framecounts());
  }
  if (from.isemptyframe() != 0) {
    set_isemptyframe(from.isemptyframe());
  }
}

void S2C_Frame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2C_Frame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_Frame::CopyFrom(const S2C_Frame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2C_Frame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_Frame::IsInitialized() const {
  return true;
}

void S2C_Frame::Swap(S2C_Frame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_Frame::InternalSwap(S2C_Frame* other) {
  frames_.InternalSwap(&other->frames_);
  std::swap(frameindex_, other->frameindex_);
  std::swap(framecounts_, other->framecounts_);
  std::swap(isemptyframe_, other->isemptyframe_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_Frame::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_Frame

// int32 frameIndex = 1;
void S2C_Frame::clear_frameindex() {
  frameindex_ = 0;
}
::google::protobuf::int32 S2C_Frame::frameindex() const {
  // @@protoc_insertion_point(field_get:pb.S2C_Frame.frameIndex)
  return frameindex_;
}
void S2C_Frame::set_frameindex(::google::protobuf::int32 value) {
  
  frameindex_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_Frame.frameIndex)
}

// int32 frameCounts = 2;
void S2C_Frame::clear_framecounts() {
  framecounts_ = 0;
}
::google::protobuf::int32 S2C_Frame::framecounts() const {
  // @@protoc_insertion_point(field_get:pb.S2C_Frame.frameCounts)
  return framecounts_;
}
void S2C_Frame::set_framecounts(::google::protobuf::int32 value) {
  
  framecounts_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_Frame.frameCounts)
}

// repeated .pb.C2S_Input frames = 3;
int S2C_Frame::frames_size() const {
  return frames_.size();
}
void S2C_Frame::clear_frames() {
  frames_.Clear();
}
const ::pb::C2S_Input& S2C_Frame::frames(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2C_Frame.frames)
  return frames_.Get(index);
}
::pb::C2S_Input* S2C_Frame::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2C_Frame.frames)
  return frames_.Mutable(index);
}
::pb::C2S_Input* S2C_Frame::add_frames() {
  // @@protoc_insertion_point(field_add:pb.S2C_Frame.frames)
  return frames_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::C2S_Input >*
S2C_Frame::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2C_Frame.frames)
  return &frames_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::C2S_Input >&
S2C_Frame::frames() const {
  // @@protoc_insertion_point(field_list:pb.S2C_Frame.frames)
  return frames_;
}

// bool isEmptyFrame = 4;
void S2C_Frame::clear_isemptyframe() {
  isemptyframe_ = false;
}
bool S2C_Frame::isemptyframe() const {
  // @@protoc_insertion_point(field_get:pb.S2C_Frame.isEmptyFrame)
  return isemptyframe_;
}
void S2C_Frame::set_isemptyframe(bool value) {
  
  isemptyframe_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_Frame.isEmptyFrame)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_Input::kFrameIndexFieldNumber;
const int S2C_Input::kRoomIdFieldNumber;
const int S2C_Input::kInputFieldNumber;
const int S2C_Input::kPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_Input::S2C_Input()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2C_Input)
}
S2C_Input::S2C_Input(const S2C_Input& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.input().size() > 0) {
    input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_);
  }
  ::memcpy(&frameindex_, &from.frameindex_,
    reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&frameindex_) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:pb.S2C_Input)
}

void S2C_Input::SharedCtor() {
  input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&frameindex_, 0, reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&frameindex_) + sizeof(playerid_));
  _cached_size_ = 0;
}

S2C_Input::~S2C_Input() {
  // @@protoc_insertion_point(destructor:pb.S2C_Input)
  SharedDtor();
}

void S2C_Input::SharedDtor() {
  input_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2C_Input::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_Input::descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2C_Input& S2C_Input::default_instance() {
  protobuf_Message_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2C_Input* S2C_Input::New(::google::protobuf::Arena* arena) const {
  S2C_Input* n = new S2C_Input;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_Input::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2C_Input)
  input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&frameindex_, 0, reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&frameindex_) + sizeof(playerid_));
}

bool S2C_Input::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2C_Input)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 frameIndex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frameindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 roomId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes input = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 playerId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2C_Input)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2C_Input)
  return false;
#undef DO_
}

void S2C_Input::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2C_Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 frameIndex = 1;
  if (this->frameindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->frameindex(), output);
  }

  // uint32 roomId = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->roomid(), output);
  }

  // bytes input = 3;
  if (this->input().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->input(), output);
  }

  // uint32 playerId = 4;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->playerid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2C_Input)
}

::google::protobuf::uint8* S2C_Input::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2C_Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 frameIndex = 1;
  if (this->frameindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->frameindex(), target);
  }

  // uint32 roomId = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->roomid(), target);
  }

  // bytes input = 3;
  if (this->input().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->input(), target);
  }

  // uint32 playerId = 4;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->playerid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2C_Input)
  return target;
}

size_t S2C_Input::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2C_Input)
  size_t total_size = 0;

  // bytes input = 3;
  if (this->input().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->input());
  }

  // int32 frameIndex = 1;
  if (this->frameindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frameindex());
  }

  // uint32 roomId = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());
  }

  // uint32 playerId = 4;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_Input::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2C_Input)
  GOOGLE_DCHECK_NE(&from, this);
  const S2C_Input* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_Input>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2C_Input)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2C_Input)
    MergeFrom(*source);
  }
}

void S2C_Input::MergeFrom(const S2C_Input& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2C_Input)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.input().size() > 0) {

    input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_);
  }
  if (from.frameindex() != 0) {
    set_frameindex(from.frameindex());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2C_Input::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2C_Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_Input::CopyFrom(const S2C_Input& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2C_Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_Input::IsInitialized() const {
  return true;
}

void S2C_Input::Swap(S2C_Input* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_Input::InternalSwap(S2C_Input* other) {
  input_.Swap(&other->input_);
  std::swap(frameindex_, other->frameindex_);
  std::swap(roomid_, other->roomid_);
  std::swap(playerid_, other->playerid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_Input::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_Input

// int32 frameIndex = 1;
void S2C_Input::clear_frameindex() {
  frameindex_ = 0;
}
::google::protobuf::int32 S2C_Input::frameindex() const {
  // @@protoc_insertion_point(field_get:pb.S2C_Input.frameIndex)
  return frameindex_;
}
void S2C_Input::set_frameindex(::google::protobuf::int32 value) {
  
  frameindex_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_Input.frameIndex)
}

// uint32 roomId = 2;
void S2C_Input::clear_roomid() {
  roomid_ = 0u;
}
::google::protobuf::uint32 S2C_Input::roomid() const {
  // @@protoc_insertion_point(field_get:pb.S2C_Input.roomId)
  return roomid_;
}
void S2C_Input::set_roomid(::google::protobuf::uint32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_Input.roomId)
}

// bytes input = 3;
void S2C_Input::clear_input() {
  input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& S2C_Input::input() const {
  // @@protoc_insertion_point(field_get:pb.S2C_Input.input)
  return input_.GetNoArena();
}
void S2C_Input::set_input(const ::std::string& value) {
  
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2C_Input.input)
}
#if LANG_CXX11
void S2C_Input::set_input(::std::string&& value) {
  
  input_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.S2C_Input.input)
}
#endif
void S2C_Input::set_input(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2C_Input.input)
}
void S2C_Input::set_input(const void* value, size_t size) {
  
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2C_Input.input)
}
::std::string* S2C_Input::mutable_input() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2C_Input.input)
  return input_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* S2C_Input::release_input() {
  // @@protoc_insertion_point(field_release:pb.S2C_Input.input)
  
  return input_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void S2C_Input::set_allocated_input(::std::string* input) {
  if (input != NULL) {
    
  } else {
    
  }
  input_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input);
  // @@protoc_insertion_point(field_set_allocated:pb.S2C_Input.input)
}

// uint32 playerId = 4;
void S2C_Input::clear_playerid() {
  playerid_ = 0u;
}
::google::protobuf::uint32 S2C_Input::playerid() const {
  // @@protoc_insertion_point(field_get:pb.S2C_Input.playerId)
  return playerid_;
}
void S2C_Input::set_playerid(::google::protobuf::uint32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_Input.playerId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_InputFrame::kRoomIdFieldNumber;
const int C2S_InputFrame::kPlayerIdFieldNumber;
const int C2S_InputFrame::kInputDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_InputFrame::C2S_InputFrame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_InputFrame)
}
C2S_InputFrame::C2S_InputFrame(const C2S_InputFrame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      input_data_(from.input_data_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roomid_, &from.roomid_,
    reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&roomid_) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:pb.C2S_InputFrame)
}

void C2S_InputFrame::SharedCtor() {
  ::memset(&roomid_, 0, reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&roomid_) + sizeof(playerid_));
  _cached_size_ = 0;
}

C2S_InputFrame::~C2S_InputFrame() {
  // @@protoc_insertion_point(destructor:pb.C2S_InputFrame)
  SharedDtor();
}

void C2S_InputFrame::SharedDtor() {
}

void C2S_InputFrame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_InputFrame::descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2S_InputFrame& C2S_InputFrame::default_instance() {
  protobuf_Message_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2S_InputFrame* C2S_InputFrame::New(::google::protobuf::Arena* arena) const {
  C2S_InputFrame* n = new C2S_InputFrame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_InputFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_InputFrame)
  input_data_.Clear();
  ::memset(&roomid_, 0, reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&roomid_) + sizeof(playerid_));
}

bool C2S_InputFrame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_InputFrame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 roomId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 playerId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.C2S_Input input_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_input_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_InputFrame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_InputFrame)
  return false;
#undef DO_
}

void C2S_InputFrame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_InputFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 roomId = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->roomid(), output);
  }

  // uint32 playerId = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->playerid(), output);
  }

  // repeated .pb.C2S_Input input_data = 3;
  for (unsigned int i = 0, n = this->input_data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->input_data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2S_InputFrame)
}

::google::protobuf::uint8* C2S_InputFrame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_InputFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 roomId = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->roomid(), target);
  }

  // uint32 playerId = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->playerid(), target);
  }

  // repeated .pb.C2S_Input input_data = 3;
  for (unsigned int i = 0, n = this->input_data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->input_data(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_InputFrame)
  return target;
}

size_t C2S_InputFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_InputFrame)
  size_t total_size = 0;

  // repeated .pb.C2S_Input input_data = 3;
  {
    unsigned int count = this->input_data_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->input_data(i));
    }
  }

  // uint32 roomId = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());
  }

  // uint32 playerId = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_InputFrame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_InputFrame)
  GOOGLE_DCHECK_NE(&from, this);
  const C2S_InputFrame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_InputFrame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_InputFrame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_InputFrame)
    MergeFrom(*source);
  }
}

void C2S_InputFrame::MergeFrom(const C2S_InputFrame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_InputFrame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_data_.MergeFrom(from.input_data_);
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void C2S_InputFrame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_InputFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_InputFrame::CopyFrom(const C2S_InputFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_InputFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_InputFrame::IsInitialized() const {
  return true;
}

void C2S_InputFrame::Swap(C2S_InputFrame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_InputFrame::InternalSwap(C2S_InputFrame* other) {
  input_data_.InternalSwap(&other->input_data_);
  std::swap(roomid_, other->roomid_);
  std::swap(playerid_, other->playerid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_InputFrame::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_InputFrame

// uint32 roomId = 1;
void C2S_InputFrame::clear_roomid() {
  roomid_ = 0u;
}
::google::protobuf::uint32 C2S_InputFrame::roomid() const {
  // @@protoc_insertion_point(field_get:pb.C2S_InputFrame.roomId)
  return roomid_;
}
void C2S_InputFrame::set_roomid(::google::protobuf::uint32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_InputFrame.roomId)
}

// uint32 playerId = 2;
void C2S_InputFrame::clear_playerid() {
  playerid_ = 0u;
}
::google::protobuf::uint32 C2S_InputFrame::playerid() const {
  // @@protoc_insertion_point(field_get:pb.C2S_InputFrame.playerId)
  return playerid_;
}
void C2S_InputFrame::set_playerid(::google::protobuf::uint32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_InputFrame.playerId)
}

// repeated .pb.C2S_Input input_data = 3;
int C2S_InputFrame::input_data_size() const {
  return input_data_.size();
}
void C2S_InputFrame::clear_input_data() {
  input_data_.Clear();
}
const ::pb::C2S_Input& C2S_InputFrame::input_data(int index) const {
  // @@protoc_insertion_point(field_get:pb.C2S_InputFrame.input_data)
  return input_data_.Get(index);
}
::pb::C2S_Input* C2S_InputFrame::mutable_input_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.C2S_InputFrame.input_data)
  return input_data_.Mutable(index);
}
::pb::C2S_Input* C2S_InputFrame::add_input_data() {
  // @@protoc_insertion_point(field_add:pb.C2S_InputFrame.input_data)
  return input_data_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::C2S_Input >*
C2S_InputFrame::mutable_input_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.C2S_InputFrame.input_data)
  return &input_data_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::C2S_Input >&
C2S_InputFrame::input_data() const {
  // @@protoc_insertion_point(field_list:pb.C2S_InputFrame.input_data)
  return input_data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_InputFrame::kFrameIndexFieldNumber;
const int S2C_InputFrame::kPlayersInputFrameFieldNumber;
const int S2C_InputFrame::kIsEmptyFrameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_InputFrame::S2C_InputFrame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2C_InputFrame)
}
S2C_InputFrame::S2C_InputFrame(const S2C_InputFrame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      players_input_frame_(from.players_input_frame_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&frameindex_, &from.frameindex_,
    reinterpret_cast<char*>(&isemptyframe_) -
    reinterpret_cast<char*>(&frameindex_) + sizeof(isemptyframe_));
  // @@protoc_insertion_point(copy_constructor:pb.S2C_InputFrame)
}

void S2C_InputFrame::SharedCtor() {
  ::memset(&frameindex_, 0, reinterpret_cast<char*>(&isemptyframe_) -
    reinterpret_cast<char*>(&frameindex_) + sizeof(isemptyframe_));
  _cached_size_ = 0;
}

S2C_InputFrame::~S2C_InputFrame() {
  // @@protoc_insertion_point(destructor:pb.S2C_InputFrame)
  SharedDtor();
}

void S2C_InputFrame::SharedDtor() {
}

void S2C_InputFrame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_InputFrame::descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2C_InputFrame& S2C_InputFrame::default_instance() {
  protobuf_Message_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2C_InputFrame* S2C_InputFrame::New(::google::protobuf::Arena* arena) const {
  S2C_InputFrame* n = new S2C_InputFrame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_InputFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2C_InputFrame)
  players_input_frame_.Clear();
  ::memset(&frameindex_, 0, reinterpret_cast<char*>(&isemptyframe_) -
    reinterpret_cast<char*>(&frameindex_) + sizeof(isemptyframe_));
}

bool S2C_InputFrame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2C_InputFrame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 frameIndex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frameindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.C2S_InputFrame players_input_frame = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_players_input_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isEmptyFrame = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isemptyframe_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2C_InputFrame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2C_InputFrame)
  return false;
#undef DO_
}

void S2C_InputFrame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2C_InputFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 frameIndex = 1;
  if (this->frameindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->frameindex(), output);
  }

  // repeated .pb.C2S_InputFrame players_input_frame = 2;
  for (unsigned int i = 0, n = this->players_input_frame_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->players_input_frame(i), output);
  }

  // bool isEmptyFrame = 3;
  if (this->isemptyframe() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isemptyframe(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2C_InputFrame)
}

::google::protobuf::uint8* S2C_InputFrame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2C_InputFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 frameIndex = 1;
  if (this->frameindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->frameindex(), target);
  }

  // repeated .pb.C2S_InputFrame players_input_frame = 2;
  for (unsigned int i = 0, n = this->players_input_frame_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->players_input_frame(i), deterministic, target);
  }

  // bool isEmptyFrame = 3;
  if (this->isemptyframe() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->isemptyframe(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2C_InputFrame)
  return target;
}

size_t S2C_InputFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2C_InputFrame)
  size_t total_size = 0;

  // repeated .pb.C2S_InputFrame players_input_frame = 2;
  {
    unsigned int count = this->players_input_frame_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->players_input_frame(i));
    }
  }

  // int32 frameIndex = 1;
  if (this->frameindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frameindex());
  }

  // bool isEmptyFrame = 3;
  if (this->isemptyframe() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_InputFrame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2C_InputFrame)
  GOOGLE_DCHECK_NE(&from, this);
  const S2C_InputFrame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_InputFrame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2C_InputFrame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2C_InputFrame)
    MergeFrom(*source);
  }
}

void S2C_InputFrame::MergeFrom(const S2C_InputFrame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2C_InputFrame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  players_input_frame_.MergeFrom(from.players_input_frame_);
  if (from.frameindex() != 0) {
    set_frameindex(from.frameindex());
  }
  if (from.isemptyframe() != 0) {
    set_isemptyframe(from.isemptyframe());
  }
}

void S2C_InputFrame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2C_InputFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_InputFrame::CopyFrom(const S2C_InputFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2C_InputFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_InputFrame::IsInitialized() const {
  return true;
}

void S2C_InputFrame::Swap(S2C_InputFrame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_InputFrame::InternalSwap(S2C_InputFrame* other) {
  players_input_frame_.InternalSwap(&other->players_input_frame_);
  std::swap(frameindex_, other->frameindex_);
  std::swap(isemptyframe_, other->isemptyframe_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_InputFrame::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_InputFrame

// int32 frameIndex = 1;
void S2C_InputFrame::clear_frameindex() {
  frameindex_ = 0;
}
::google::protobuf::int32 S2C_InputFrame::frameindex() const {
  // @@protoc_insertion_point(field_get:pb.S2C_InputFrame.frameIndex)
  return frameindex_;
}
void S2C_InputFrame::set_frameindex(::google::protobuf::int32 value) {
  
  frameindex_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_InputFrame.frameIndex)
}

// repeated .pb.C2S_InputFrame players_input_frame = 2;
int S2C_InputFrame::players_input_frame_size() const {
  return players_input_frame_.size();
}
void S2C_InputFrame::clear_players_input_frame() {
  players_input_frame_.Clear();
}
const ::pb::C2S_InputFrame& S2C_InputFrame::players_input_frame(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2C_InputFrame.players_input_frame)
  return players_input_frame_.Get(index);
}
::pb::C2S_InputFrame* S2C_InputFrame::mutable_players_input_frame(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2C_InputFrame.players_input_frame)
  return players_input_frame_.Mutable(index);
}
::pb::C2S_InputFrame* S2C_InputFrame::add_players_input_frame() {
  // @@protoc_insertion_point(field_add:pb.S2C_InputFrame.players_input_frame)
  return players_input_frame_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::C2S_InputFrame >*
S2C_InputFrame::mutable_players_input_frame() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2C_InputFrame.players_input_frame)
  return &players_input_frame_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::C2S_InputFrame >&
S2C_InputFrame::players_input_frame() const {
  // @@protoc_insertion_point(field_list:pb.S2C_InputFrame.players_input_frame)
  return players_input_frame_;
}

// bool isEmptyFrame = 3;
void S2C_InputFrame::clear_isemptyframe() {
  isemptyframe_ = false;
}
bool S2C_InputFrame::isemptyframe() const {
  // @@protoc_insertion_point(field_get:pb.S2C_InputFrame.isEmptyFrame)
  return isemptyframe_;
}
void S2C_InputFrame::set_isemptyframe(bool value) {
  
  isemptyframe_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_InputFrame.isEmptyFrame)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
